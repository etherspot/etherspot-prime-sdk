version: 2.1

orbs:
  slack: circleci/slack@3.4.2

jobs:
  install:
    working_directory: ~/etherspot-prime-sdk
    docker:
      - image: cimg/node:18.16.1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$ETHERSPOT_NPM_TOKEN" > ~/etherspot-prime-sdk/.npmrc
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      # - slack/status:
      #     failure_message: "Triggered by: *${CIRCLE_USERNAME}* \n\n Ooops! The *$CIRCLE_JOB* job has failed! :circleci-fail:"
      #     webhook: "${SLACK_WEBHOOK_URL}"

  publish:
    working_directory: ~/etherspot-prime-sdk
    docker:
      - image: cimg/node:18.16.1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$ETHERSPOT_NPM_TOKEN" > ~/etherspot-prime-sdk/.npmrc
      - run:
          name: Build Etherpot-SDK
          command: npm run build
      - run:
          name: Checkout e2e repo and run tests
          no_output_timeout: 60m
          command: |
            cd ~
            git clone https://github.com/etherspot/e2e-sdk-prime.git
            cd e2e-sdk-prime
            sed -i.bak "s/_private_key_/$PRIVATE_KEY/g" .env
            mv package.json temp.json
            jq -r '.dependencies."@etherspot/prime-sdk" |= "file:../etherspot-prime-sdk"' temp.json > package.json
            rm temp.json
            # npm i
            pwd
            touch ~/logs.txt
            pwd
            ls -al
            pwd
            npm i |& tee ~/logs.txt
            pwd
            # npm run test-mainnet-transfertoken-matic |& tee /home/circleci/e2e-sdk-prime/logs.txt
            ls -al ~
            ls -al
            pwd
            chmod 755 ~/logs.txt
            cat ~/logs.txt
            pwd
            echo 'export LOGS=$(cat ~/logs.txt)' >> "$BASH_ENV"
            rm ~/logs.txt
            source "$BASH_ENV"
      # - run:
      #     name: Publish package to npm
      #     command: |
      #       cd ~/etherspot-sdk
      #       npm publish
      # - run:
      #     name: Announce Publish
      #     command: |
      #       chmod +x .circleci/announcePublish.sh
      # #       .circleci/announcePublish.sh "Etherspot SDK" "$(node -e "console.log(require('./package.json').version)")"
      - slack/status:
          failure_message: "Triggered by: *${CIRCLE_USERNAME}* \n\n Ooops! The *$CIRCLE_JOB* job has failed! :circleci-fail:"
          success_message: "Triggered by: *${CIRCLE_USERNAME}* \n\n Woohoh! The *$CIRCLE_JOB* job has suceeded! :circleci-pass: \n\n $LOGS"
          # only_for_branches: master
          webhook: "${SLACK_WEBHOOK_URL}"
  publish-github-release:
    docker:
      - image: ardd97/ghr
    steps:
      - checkout
      - run:
          name: "Publish Release on GitHub"
          command: |
            PACKAGE_VERSION="$(jq .version package.json -r)"
            echo $PACKAGE_VERSION
            ghr -t "${GITHUB_TOKEN}" -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" -c "${CIRCLE_SHA1}" "$PACKAGE_VERSION"

workflows:
  version: 2.1
  install_and_publish:
    jobs:
      - install:
          context: general-vars
      - publish:
          context: general-vars
          requires:
            - install
          filters:
            branches:
              only:
                  - feature/e2e-prime-pipeline
      # - publish-github-release:
      #     context: general-vars
      #     filters:
      #       branches:
      #         only:
      #             - feature/e2e-prime-pipeline