/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  WalletCompatability,
  WalletCompatabilityInterface,
} from '../../../../src/wallet/helpers/WalletCompatability';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ERC777Received',
    type: 'event',
  },
  {
    inputs: [],
    name: '_registry',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'interfaceHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'canImplementInterfaceForAddress',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'messageHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'isValidSignature',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'isValidSignature',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC1155Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'registry',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'tokensReceived',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610d3e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063249cb3fa1161005b578063249cb3fa1461013857806379cbc5fa146101685780637b10399914610186578063f23a6e61146101a457610087565b806223de291461008c578063150b7a02146100a85780631626ba7e146100d857806320c13b0b14610108575b600080fd5b6100a660048036038101906100a191906105f5565b6101d4565b005b6100c260048036038101906100bd91906106c4565b610219565b6040516100cf9190610787565b60405180910390f35b6100f260048036038101906100ed91906107d8565b61022e565b6040516100ff9190610787565b60405180910390f35b610122600480360381019061011d9190610838565b610311565b60405161012f9190610787565b60405180910390f35b610152600480360381019061014d91906108b9565b6103f7565b60405161015f9190610908565b60405180910390f35b61017061048f565b60405161017d9190610932565b60405180910390f35b61018e6104b3565b60405161019b9190610932565b60405180910390f35b6101be60048036038101906101b9919061094d565b6104dc565b6040516101cb9190610787565b60405180910390f35b7f89221357d1a64b9fd20652b9e9bbf523bb89cb65f026eb03d9ecafed98d15650878787604051610207939291906109f6565b60405180910390a15050505050505050565b600063150b7a0260e01b905095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1e382ce308686866040518563ffffffff1660e01b81526004016102909493929190610a8b565b602060405180830381865afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190610b03565b6102e25763ffffffff60e01b610308565b6040516020016102f190610b87565b604051602081830303815290604052805190602001205b90509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663124e9eb330878787876040518663ffffffff1660e01b8152600401610375959493929190610b9c565b602060405180830381865afa158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190610b03565b6103c75763ffffffff60e01b6103ed565b6040516020016103d690610c31565b604051602081830303815290604052805190602001205b9050949350505050565b60008060405160200161040990610c92565b604051602081830303815290604052805190602001208414801561045857503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156104855760405160200161046c90610cf3565b6040516020818303038152906040528051906020012090505b8091505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063f23a6e6160e01b90509695505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610527826104fc565b9050919050565b6105378161051c565b811461054257600080fd5b50565b6000813590506105548161052e565b92915050565b6000819050919050565b61056d8161055a565b811461057857600080fd5b50565b60008135905061058a81610564565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126105b5576105b4610590565b5b8235905067ffffffffffffffff8111156105d2576105d1610595565b5b6020830191508360018202830111156105ee576105ed61059a565b5b9250929050565b60008060008060008060008060c0898b031215610615576106146104f2565b5b60006106238b828c01610545565b98505060206106348b828c01610545565b97505060406106458b828c01610545565b96505060606106568b828c0161057b565b955050608089013567ffffffffffffffff811115610677576106766104f7565b5b6106838b828c0161059f565b945094505060a089013567ffffffffffffffff8111156106a6576106a56104f7565b5b6106b28b828c0161059f565b92509250509295985092959890939650565b6000806000806000608086880312156106e0576106df6104f2565b5b60006106ee88828901610545565b95505060206106ff88828901610545565b94505060406107108882890161057b565b935050606086013567ffffffffffffffff811115610731576107306104f7565b5b61073d8882890161059f565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6107818161074c565b82525050565b600060208201905061079c6000830184610778565b92915050565b6000819050919050565b6107b5816107a2565b81146107c057600080fd5b50565b6000813590506107d2816107ac565b92915050565b6000806000604084860312156107f1576107f06104f2565b5b60006107ff868287016107c3565b935050602084013567ffffffffffffffff8111156108205761081f6104f7565b5b61082c8682870161059f565b92509250509250925092565b60008060008060408587031215610852576108516104f2565b5b600085013567ffffffffffffffff8111156108705761086f6104f7565b5b61087c8782880161059f565b9450945050602085013567ffffffffffffffff81111561089f5761089e6104f7565b5b6108ab8782880161059f565b925092505092959194509250565b600080604083850312156108d0576108cf6104f2565b5b60006108de858286016107c3565b92505060206108ef85828601610545565b9150509250929050565b610902816107a2565b82525050565b600060208201905061091d60008301846108f9565b92915050565b61092c8161051c565b82525050565b60006020820190506109476000830184610923565b92915050565b60008060008060008060a0878903121561096a576109696104f2565b5b600061097889828a01610545565b965050602061098989828a01610545565b955050604061099a89828a0161057b565b94505060606109ab89828a0161057b565b935050608087013567ffffffffffffffff8111156109cc576109cb6104f7565b5b6109d889828a0161059f565b92509250509295509295509295565b6109f08161055a565b82525050565b6000606082019050610a0b6000830186610923565b610a186020830185610923565b610a2560408301846109e7565b949350505050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610a6a8385610a2d565b9350610a77838584610a3e565b610a8083610a4d565b840190509392505050565b6000606082019050610aa06000830187610923565b610aad60208301866108f9565b8181036040830152610ac0818486610a5e565b905095945050505050565b60008115159050919050565b610ae081610acb565b8114610aeb57600080fd5b50565b600081519050610afd81610ad7565b92915050565b600060208284031215610b1957610b186104f2565b5b6000610b2784828501610aee565b91505092915050565b600081905092915050565b7f697356616c69645369676e617475726528627974657333322c62797465732900600082015250565b6000610b71601f83610b30565b9150610b7c82610b3b565b601f82019050919050565b6000610b9282610b64565b9150819050919050565b6000606082019050610bb16000830188610923565b8181036020830152610bc4818688610a5e565b90508181036040830152610bd9818486610a5e565b90509695505050505050565b7f697356616c69645369676e61747572652862797465732c627974657329000000600082015250565b6000610c1b601d83610b30565b9150610c2682610be5565b601d82019050919050565b6000610c3c82610c0e565b9150819050919050565b7f455243373737546f6b656e73526563697069656e740000000000000000000000600082015250565b6000610c7c601583610b30565b9150610c8782610c46565b601582019050919050565b6000610c9d82610c6f565b9150819050919050565b7f455243313832305f4143434550545f4d41474943000000000000000000000000600082015250565b6000610cdd601483610b30565b9150610ce882610ca7565b601482019050919050565b6000610cfe82610cd0565b915081905091905056fea2646970667358221220f7e20339dc90e32d86fa9f7a7f468d9da4a71760d505c93049696a3d99cbb55b64736f6c634300080c0033';

type WalletCompatabilityConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: WalletCompatabilityConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class WalletCompatability__factory extends ContractFactory {
  constructor(...args: WalletCompatabilityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<WalletCompatability> {
    return super.deploy(overrides || {}) as Promise<WalletCompatability>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WalletCompatability {
    return super.attach(address) as WalletCompatability;
  }
  override connect(signer: Signer): WalletCompatability__factory {
    return super.connect(signer) as WalletCompatability__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletCompatabilityInterface {
    return new utils.Interface(_abi) as WalletCompatabilityInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WalletCompatability {
    return new Contract(address, _abi, signerOrProvider) as WalletCompatability;
  }
}
