/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestAggregatedAccount,
  TestAggregatedAccountInterface,
} from "../../../../src/aa-4337/test/TestAggregatedAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "anAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC777Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldEntryPoint",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EtherspotWalletInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldRegistry",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRegistry",
        type: "address",
      },
    ],
    name: "RegistryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "_registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newEntryPoint",
        type: "address",
      },
    ],
    name: "updateEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRegistry",
        type: "address",
      },
    ],
    name: "updateRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50604051620039fa380380620039fa83398181016040528101906200006a91906200010f565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505062000141565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d782620000aa565b9050919050565b620000e981620000ca565b8114620000f557600080fd5b50565b6000815190506200010981620000de565b92915050565b600060208284031215620001285762000127620000a5565b5b60006200013884828501620000f8565b91505092915050565b60805160a0516138706200018a60003960008181610af001526117ee015260008181610bac01528181610c3b01528181610e7401528181610f030152610fb301526138706000f3fe60806040526004361061014e5760003560e01c80634d44560d116100b6578063affed0e01161006f578063affed0e01461047e578063b0d691fe146104a9578063b61d27f6146104d4578063c0c53b8b146104fd578063c399ec8814610526578063f23a6e611461055157610155565b80634d44560d1461038d5780634f1ef286146103b657806352d1902d146103d257806379cbc5fa146103fd5780637b103999146104285780638da5cb5b1461045357610155565b806320c13b0b1161010857806320c13b0b14610278578063245a7bfc146102b5578063249cb3fa146102e05780633659cfe61461031d5780633a871cdd146103465780634a58db191461038357610155565b806223de291461015a578063150b7a02146101835780631626ba7e146101c057806318dfb3c7146101fd5780631a5da6c8146102265780631b71bb6e1461024f57610155565b3661015557005b600080fd5b34801561016657600080fd5b50610181600480360381019061017c9190611f70565b61058e565b005b34801561018f57600080fd5b506101aa60048036038101906101a5919061203f565b6105d3565b6040516101b79190612102565b60405180910390f35b3480156101cc57600080fd5b506101e760048036038101906101e29190612153565b6105e8565b6040516101f49190612102565b60405180910390f35b34801561020957600080fd5b50610224600480360381019061021f919061225f565b6106cb565b005b34801561023257600080fd5b5061024d600480360381019061024891906122e0565b6107dd565b005b34801561025b57600080fd5b50610276600480360381019061027191906122e0565b6108f1565b005b34801561028457600080fd5b5061029f600480360381019061029a919061230d565b610a08565b6040516102ac9190612102565b60405180910390f35b3480156102c157600080fd5b506102ca610aee565b6040516102d7919061239d565b60405180910390f35b3480156102ec57600080fd5b50610307600480360381019061030291906123b8565b610b12565b6040516103149190612407565b60405180910390f35b34801561032957600080fd5b50610344600480360381019061033f91906122e0565b610baa565b005b34801561035257600080fd5b5061036d60048036038101906103689190612447565b610d33565b60405161037a91906124c5565b60405180910390f35b61038b610d7d565b005b34801561039957600080fd5b506103b460048036038101906103af919061251e565b610df2565b005b6103d060048036038101906103cb919061269f565b610e72565b005b3480156103de57600080fd5b506103e7610faf565b6040516103f49190612407565b60405180910390f35b34801561040957600080fd5b50610412611068565b60405161041f919061239d565b60405180910390f35b34801561043457600080fd5b5061043d61108c565b60405161044a919061239d565b60405180910390f35b34801561045f57600080fd5b506104686110b5565b604051610475919061239d565b60405180910390f35b34801561048a57600080fd5b506104936110db565b6040516104a091906124c5565b60405180910390f35b3480156104b557600080fd5b506104be61110b565b6040516104cb919061275a565b60405180910390f35b3480156104e057600080fd5b506104fb60048036038101906104f69190612775565b611135565b005b34801561050957600080fd5b50610524600480360381019061051f9190612827565b611192565b005b34801561053257600080fd5b5061053b6112dc565b60405161054891906124c5565b60405180910390f35b34801561055d57600080fd5b506105786004803603810190610573919061287a565b611364565b6040516105859190612102565b60405180910390f35b7f89221357d1a64b9fd20652b9e9bbf523bb89cb65f026eb03d9ecafed98d156508787876040516105c193929190612914565b60405180910390a15050505050505050565b600063150b7a0260e01b905095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1e382ce308686866040518563ffffffff1660e01b815260040161064a9493929190612989565b602060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190612a01565b61069c5763ffffffff60e01b6106c2565b6040516020016106ab90612a85565b604051602081830303815290604052805190602001205b90509392505050565b6106d361137a565b81819050848490501461071b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071290612b1d565b60405180910390fd5b60005b848490508110156107d6576107c385858381811061073f5761073e612b3d565b5b905060200201602081019061075491906122e0565b600085858581811061076957610768612b3d565b5b905060200281019061077b9190612b7b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611449565b80806107ce90612c0d565b91505061071e565b5050505050565b6107e56114cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c90612cc8565b60405180910390fd5b7f4803049971913703d2dd43c06110dc7fad451e4603e9f485cbeebdda11263ab060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040516108a6929190612ce8565b60405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6108f96114cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096090612d83565b60405180910390fd5b7f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040516109bc929190612ce8565b60405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663124e9eb330878787876040518663ffffffff1660e01b8152600401610a6c959493929190612da3565b602060405180830381865afa158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad9190612a01565b610abe5763ffffffff60e01b610ae4565b604051602001610acd90612e38565b604051602081830303815290604052805190602001205b9050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080604051602001610b2490612e99565b6040516020818303038152906040528051906020012084148015610b7357503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15610ba057604051602001610b8790612efa565b6040516020818303038152906040528051906020012090505b8091505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610c39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3090612f81565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c78611595565b73ffffffffffffffffffffffffffffffffffffffff1614610cce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc590613013565b60405180910390fd5b610cd7816115ec565b610d3081600067ffffffffffffffff811115610cf657610cf5612574565b5b6040519080825280601f01601f191660200182016040528015610d285781602001600182028036833780820191505090505b5060006115f7565b50565b6000610d3d611765565b610d4784846117dc565b90506000848060400190610d5b9190612b7b565b90501415610d6d57610d6c84611851565b5b610d76826118ff565b9392505050565b610d8561110b565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610dbe919061239d565b6000604051808303818588803b158015610dd757600080fd5b505af1158015610deb573d6000803e3d6000fd5b5050505050565b610dfa6114cd565b610e0261110b565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610e3c929190613042565b600060405180830381600087803b158015610e5657600080fd5b505af1158015610e6a573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890612f81565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610f40611595565b73ffffffffffffffffffffffffffffffffffffffff1614610f96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8d90613013565b60405180910390fd5b610f9f826115ec565b610fab828260016115f7565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461103f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611036906130dd565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61113d61137a565b61118c848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611449565b50505050565b60008060159054906101000a900460ff161590508080156111c557506001600060149054906101000a900460ff1660ff16105b806111f457506111d43061199b565b1580156111f357506001600060149054906101000a900460ff1660ff16145b5b611233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122a9061316f565b60405180910390fd5b6001600060146101000a81548160ff021916908360ff1602179055508015611271576001600060156101000a81548160ff0219169083151502179055505b61127d848460006119be565b80156112d65760008060156101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516112cd91906131d7565b60405180910390a15b50505050565b60006112e661110b565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161131e919061239d565b602060405180830381865afa15801561133b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135f9190613207565b905090565b600063f23a6e6160e01b90509695505050505050565b61138261110b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061140857506003600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143e906132a6565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516114729190613340565b60006040518083038185875af1925050503d80600081146114af576040519150601f19603f3d011682016040523d82523d6000602084013e6114b4565b606091505b5091509150816114c657805160208201fd5b5050505050565b6003600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061155457503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158a906133a3565b60405180910390fd5b565b60006115c37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611b5a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6115f46114cd565b50565b6116237f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b611b64565b60000160009054906101000a900460ff16156116475761164283611b6e565b611760565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116af57506040513d601f19601f820116820180604052508101906116ac91906133d8565b60015b6116ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e590613477565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174a90613509565b60405180910390fd5b5061175f838383611c27565b5b505050565b61176d61110b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d19061359b565b60405180910390fd5b565b600061184960405180606001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001600065ffffffffffff168152602001600065ffffffffffff16815250611c53565b905092915050565b80602001356003600081819054906101000a90046bffffffffffffffffffffffff1680929190611880906135d3565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff16146118fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f390613654565b60405180910390fd5b50565b600081146119985760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060405161194f9061369a565b600060405180830381858888f193505050503d806000811461198d576040519150601f19603f3d011682016040523d82523d6000602084013e611992565b606091505b50509050505b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f35d446a6e0c2acb669ae5eaa02b6659491c3a4b2e151cf3343aca066f8542e0b60405160405180910390a4505050565b6000819050919050565b6000819050919050565b611b778161199b565b611bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bad90613721565b60405180910390fd5b80611be37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611b5a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611c3083611c9b565b600082511180611c3d5750805b15611c4e57611c4c8383611cea565b505b505050565b600060d0826020015165ffffffffffff16901b60a0836040015165ffffffffffff16901b836000015173ffffffffffffffffffffffffffffffffffffffff1617179050919050565b611ca481611b6e565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611d0f838360405180606001604052806027815260200161381460279139611d17565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611d419190613340565b600060405180830381855af49150503d8060008114611d7c576040519150601f19603f3d011682016040523d82523d6000602084013e611d81565b606091505b5091509150611d9286838387611d9d565b925050509392505050565b60608315611e0057600083511415611df857611db88561199b565b611df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dee9061378d565b60405180910390fd5b5b829050611e0b565b611e0a8383611e13565b5b949350505050565b600082511115611e265781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5a91906137f1565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ea282611e77565b9050919050565b611eb281611e97565b8114611ebd57600080fd5b50565b600081359050611ecf81611ea9565b92915050565b6000819050919050565b611ee881611ed5565b8114611ef357600080fd5b50565b600081359050611f0581611edf565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611f3057611f2f611f0b565b5b8235905067ffffffffffffffff811115611f4d57611f4c611f10565b5b602083019150836001820283011115611f6957611f68611f15565b5b9250929050565b60008060008060008060008060c0898b031215611f9057611f8f611e6d565b5b6000611f9e8b828c01611ec0565b9850506020611faf8b828c01611ec0565b9750506040611fc08b828c01611ec0565b9650506060611fd18b828c01611ef6565b955050608089013567ffffffffffffffff811115611ff257611ff1611e72565b5b611ffe8b828c01611f1a565b945094505060a089013567ffffffffffffffff81111561202157612020611e72565b5b61202d8b828c01611f1a565b92509250509295985092959890939650565b60008060008060006080868803121561205b5761205a611e6d565b5b600061206988828901611ec0565b955050602061207a88828901611ec0565b945050604061208b88828901611ef6565b935050606086013567ffffffffffffffff8111156120ac576120ab611e72565b5b6120b888828901611f1a565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120fc816120c7565b82525050565b600060208201905061211760008301846120f3565b92915050565b6000819050919050565b6121308161211d565b811461213b57600080fd5b50565b60008135905061214d81612127565b92915050565b60008060006040848603121561216c5761216b611e6d565b5b600061217a8682870161213e565b935050602084013567ffffffffffffffff81111561219b5761219a611e72565b5b6121a786828701611f1a565b92509250509250925092565b60008083601f8401126121c9576121c8611f0b565b5b8235905067ffffffffffffffff8111156121e6576121e5611f10565b5b60208301915083602082028301111561220257612201611f15565b5b9250929050565b60008083601f84011261221f5761221e611f0b565b5b8235905067ffffffffffffffff81111561223c5761223b611f10565b5b60208301915083602082028301111561225857612257611f15565b5b9250929050565b6000806000806040858703121561227957612278611e6d565b5b600085013567ffffffffffffffff81111561229757612296611e72565b5b6122a3878288016121b3565b9450945050602085013567ffffffffffffffff8111156122c6576122c5611e72565b5b6122d287828801612209565b925092505092959194509250565b6000602082840312156122f6576122f5611e6d565b5b600061230484828501611ec0565b91505092915050565b6000806000806040858703121561232757612326611e6d565b5b600085013567ffffffffffffffff81111561234557612344611e72565b5b61235187828801611f1a565b9450945050602085013567ffffffffffffffff81111561237457612373611e72565b5b61238087828801611f1a565b925092505092959194509250565b61239781611e97565b82525050565b60006020820190506123b2600083018461238e565b92915050565b600080604083850312156123cf576123ce611e6d565b5b60006123dd8582860161213e565b92505060206123ee85828601611ec0565b9150509250929050565b6124018161211d565b82525050565b600060208201905061241c60008301846123f8565b92915050565b600080fd5b6000610160828403121561243e5761243d612422565b5b81905092915050565b6000806000606084860312156124605761245f611e6d565b5b600084013567ffffffffffffffff81111561247e5761247d611e72565b5b61248a86828701612427565b935050602061249b8682870161213e565b92505060406124ac86828701611ef6565b9150509250925092565b6124bf81611ed5565b82525050565b60006020820190506124da60008301846124b6565b92915050565b60006124eb82611e77565b9050919050565b6124fb816124e0565b811461250657600080fd5b50565b600081359050612518816124f2565b92915050565b6000806040838503121561253557612534611e6d565b5b600061254385828601612509565b925050602061255485828601611ef6565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125ac82612563565b810181811067ffffffffffffffff821117156125cb576125ca612574565b5b80604052505050565b60006125de611e63565b90506125ea82826125a3565b919050565b600067ffffffffffffffff82111561260a57612609612574565b5b61261382612563565b9050602081019050919050565b82818337600083830152505050565b600061264261263d846125ef565b6125d4565b90508281526020810184848401111561265e5761265d61255e565b5b612669848285612620565b509392505050565b600082601f83011261268657612685611f0b565b5b813561269684826020860161262f565b91505092915050565b600080604083850312156126b6576126b5611e6d565b5b60006126c485828601611ec0565b925050602083013567ffffffffffffffff8111156126e5576126e4611e72565b5b6126f185828601612671565b9150509250929050565b6000819050919050565b600061272061271b61271684611e77565b6126fb565b611e77565b9050919050565b600061273282612705565b9050919050565b600061274482612727565b9050919050565b61275481612739565b82525050565b600060208201905061276f600083018461274b565b92915050565b6000806000806060858703121561278f5761278e611e6d565b5b600061279d87828801611ec0565b94505060206127ae87828801611ef6565b935050604085013567ffffffffffffffff8111156127cf576127ce611e72565b5b6127db87828801611f1a565b925092505092959194509250565b60006127f482611e97565b9050919050565b612804816127e9565b811461280f57600080fd5b50565b600081359050612821816127fb565b92915050565b6000806000606084860312156128405761283f611e6d565b5b600061284e86828701612812565b935050602061285f86828701611ec0565b925050604061287086828701611ec0565b9150509250925092565b60008060008060008060a0878903121561289757612896611e6d565b5b60006128a589828a01611ec0565b96505060206128b689828a01611ec0565b95505060406128c789828a01611ef6565b94505060606128d889828a01611ef6565b935050608087013567ffffffffffffffff8111156128f9576128f8611e72565b5b61290589828a01611f1a565b92509250509295509295509295565b6000606082019050612929600083018661238e565b612936602083018561238e565b61294360408301846124b6565b949350505050565b600082825260208201905092915050565b6000612968838561294b565b9350612975838584612620565b61297e83612563565b840190509392505050565b600060608201905061299e600083018761238e565b6129ab60208301866123f8565b81810360408301526129be81848661295c565b905095945050505050565b60008115159050919050565b6129de816129c9565b81146129e957600080fd5b50565b6000815190506129fb816129d5565b92915050565b600060208284031215612a1757612a16611e6d565b5b6000612a25848285016129ec565b91505092915050565b600081905092915050565b7f697356616c69645369676e617475726528627974657333322c62797465732900600082015250565b6000612a6f601f83612a2e565b9150612a7a82612a39565b601f82019050919050565b6000612a9082612a62565b9150819050919050565b600082825260208201905092915050565b7f457468657273706f7457616c6c65743a3a206578656375746542617463683a2060008201527f77726f6e67206172726179206c656e6774687300000000000000000000000000602082015250565b6000612b07603383612a9a565b9150612b1282612aab565b604082019050919050565b60006020820190508181036000830152612b3681612afa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612b9857612b97612b6c565b5b80840192508235915067ffffffffffffffff821115612bba57612bb9612b71565b5b602083019250600182023603831315612bd657612bd5612b76565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c1882611ed5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612c4b57612c4a612bde565b5b600182019050919050565b7f457468657273706f7457616c6c65743a3a20526567697374727920616464726560008201527f73732063616e6e6f74206265207a65726f000000000000000000000000000000602082015250565b6000612cb2603183612a9a565b9150612cbd82612c56565b604082019050919050565b60006020820190508181036000830152612ce181612ca5565b9050919050565b6000604082019050612cfd600083018561238e565b612d0a602083018461238e565b9392505050565b7f457468657273706f7457616c6c65743a3a20456e747279506f696e742061646460008201527f726573732063616e6e6f74206265207a65726f00000000000000000000000000602082015250565b6000612d6d603383612a9a565b9150612d7882612d11565b604082019050919050565b60006020820190508181036000830152612d9c81612d60565b9050919050565b6000606082019050612db8600083018861238e565b8181036020830152612dcb81868861295c565b90508181036040830152612de081848661295c565b90509695505050505050565b7f697356616c69645369676e61747572652862797465732c627974657329000000600082015250565b6000612e22601d83612a2e565b9150612e2d82612dec565b601d82019050919050565b6000612e4382612e15565b9150819050919050565b7f455243373737546f6b656e73526563697069656e740000000000000000000000600082015250565b6000612e83601583612a2e565b9150612e8e82612e4d565b601582019050919050565b6000612ea482612e76565b9150819050919050565b7f455243313832305f4143434550545f4d41474943000000000000000000000000600082015250565b6000612ee4601483612a2e565b9150612eef82612eae565b601482019050919050565b6000612f0582612ed7565b9150819050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b6000612f6b602c83612a9a565b9150612f7682612f0f565b604082019050919050565b60006020820190508181036000830152612f9a81612f5e565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000612ffd602c83612a9a565b915061300882612fa1565b604082019050919050565b6000602082019050818103600083015261302c81612ff0565b9050919050565b61303c816124e0565b82525050565b60006040820190506130576000830185613033565b61306460208301846124b6565b9392505050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b60006130c7603883612a9a565b91506130d28261306b565b604082019050919050565b600060208201905081810360008301526130f6816130ba565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613159602e83612a9a565b9150613164826130fd565b604082019050919050565b600060208201905081810360008301526131888161314c565b9050919050565b6000819050919050565b600060ff82169050919050565b60006131c16131bc6131b78461318f565b6126fb565b613199565b9050919050565b6131d1816131a6565b82525050565b60006020820190506131ec60008301846131c8565b92915050565b60008151905061320181611edf565b92915050565b60006020828403121561321d5761321c611e6d565b5b600061322b848285016131f2565b91505092915050565b7f457468657273706f7457616c6c65743a3a206e6f74204f776e6572206f72204560008201527f6e747279506f696e740000000000000000000000000000000000000000000000602082015250565b6000613290602983612a9a565b915061329b82613234565b604082019050919050565b600060208201905081810360008301526132bf81613283565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156132fa5780820151818401526020810190506132df565b83811115613309576000848401525b50505050565b600061331a826132c6565b61332481856132d1565b93506133348185602086016132dc565b80840191505092915050565b600061334c828461330f565b915081905092915050565b7f457468657273706f7457616c6c65743a3a206f6e6c79206f776e657200000000600082015250565b600061338d601c83612a9a565b915061339882613357565b602082019050919050565b600060208201905081810360008301526133bc81613380565b9050919050565b6000815190506133d281612127565b92915050565b6000602082840312156133ee576133ed611e6d565b5b60006133fc848285016133c3565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000613461602e83612a9a565b915061346c82613405565b604082019050919050565b6000602082019050818103600083015261349081613454565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b60006134f3602983612a9a565b91506134fe82613497565b604082019050919050565b60006020820190508181036000830152613522816134e6565b9050919050565b7f457468657273706f7457616c6c65743a204e6f742066726f6d20456e7472795060008201527f6f696e7400000000000000000000000000000000000000000000000000000000602082015250565b6000613585602483612a9a565b915061359082613529565b604082019050919050565b600060208201905081810360008301526135b481613578565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b60006135de826135bb565b91506bffffffffffffffffffffffff8214156135fd576135fc612bde565b5b600182019050919050565b7f457468657273706f7457616c6c65743a3a20696e76616c6964206e6f6e636500600082015250565b600061363e601f83612a9a565b915061364982613608565b602082019050919050565b6000602082019050818103600083015261366d81613631565b9050919050565b50565b60006136846000836132d1565b915061368f82613674565b600082019050919050565b60006136a582613677565b9150819050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600061370b602d83612a9a565b9150613716826136af565b604082019050919050565b6000602082019050818103600083015261373a816136fe565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613777601d83612a9a565b915061378282613741565b602082019050919050565b600060208201905081810360008301526137a68161376a565b9050919050565b600081519050919050565b60006137c3826137ad565b6137cd8185612a9a565b93506137dd8185602086016132dc565b6137e681612563565b840191505092915050565b6000602082019050818103600083015261380b81846137b8565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220dbbd5559e3326881dda71ce0f054137186932c3a13d23a194356cd589c120f5264736f6c634300080c0033";

type TestAggregatedAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAggregatedAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAggregatedAccount__factory extends ContractFactory {
  constructor(...args: TestAggregatedAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestAggregatedAccount> {
    return super.deploy(
      anAggregator,
      overrides || {}
    ) as Promise<TestAggregatedAccount>;
  }
  override getDeployTransaction(
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anAggregator, overrides || {});
  }
  override attach(address: string): TestAggregatedAccount {
    return super.attach(address) as TestAggregatedAccount;
  }
  override connect(signer: Signer): TestAggregatedAccount__factory {
    return super.connect(signer) as TestAggregatedAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAggregatedAccountInterface {
    return new utils.Interface(_abi) as TestAggregatedAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAggregatedAccount {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestAggregatedAccount;
  }
}
