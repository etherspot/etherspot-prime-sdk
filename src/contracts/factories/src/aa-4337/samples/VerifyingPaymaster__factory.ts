/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../../../../src/aa-4337/samples/VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "senderNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620029fb380380620029fb8339818101604052810190620000379190620002ba565b81620000586200004c6200013960201b60201c565b6200014160201b60201c565b6200007467aabb336c9ce83de860c01b6200020560201b60201c565b62000090672d07becd259a4ef060c01b6200020560201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620000e1675edecb2fe7769a9660c01b6200020860201b60201c565b620000fd67e1b97c6fdbfe022560c01b6200020860201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000301565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200023d8262000210565b9050919050565b6000620002518262000230565b9050919050565b620002638162000244565b81146200026f57600080fd5b50565b600081519050620002838162000258565b92915050565b620002948162000230565b8114620002a057600080fd5b50565b600081519050620002b48162000289565b92915050565b60008060408385031215620002d457620002d36200020b565b5b6000620002e48582860162000272565b9250506020620002f785828601620002a3565b9150509250929050565b60805160a05161269c6200035f6000396000818161058e0152611309015260008181610402015281816104fd015281816107d7015281816108670152818161095501528181610a2101528181610afc0152610f47015261269c6000f3fe6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec88146102f8578063d0e30db014610323578063f2fde38b1461032d578063f465c77e14610356576100f3565b8063a9a2340914610264578063b0d691fe1461028d578063bb9fe6bf146102b8578063c23a5cea146102cf576100f3565b80638da5cb5b116100c65780638da5cb5b1461017f57806394d4ad60146101aa57806394e1fc19146101ea5780639c90b44314610227576100f3565b80630396cb60146100f8578063205c28781461011457806323d9ac9b1461013d578063715018a614610168575b600080fd5b610112600480360381019061010d9190611822565b610394565b005b34801561012057600080fd5b5061013b600480360381019061013691906118e3565b61048f565b005b34801561014957600080fd5b5061015261058c565b60405161015f9190611944565b60405180910390f35b34801561017457600080fd5b5061017d6105b0565b005b34801561018b57600080fd5b506101946105c4565b6040516101a19190611944565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc91906119c4565b6105ed565b6040516101e19493929190611a90565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190611b21565b610678565b60405161021e9190611ba9565b60405180910390f35b34801561023357600080fd5b5061024e60048036038101906102499190611bf0565b61073f565b60405161025b9190611c2c565b60405180910390f35b34801561027057600080fd5b5061028b60048036038101906102869190611c6c565b610757565b005b34801561029957600080fd5b506102a26107d5565b6040516102af9190611d3f565b60405180910390f35b3480156102c457600080fd5b506102cd6107f9565b005b3480156102db57600080fd5b506102f660048036038101906102f19190611d5a565b6108e7565b005b34801561030457600080fd5b5061030d6109e1565b60405161031a9190611c2c565b60405180910390f35b61032b610abe565b005b34801561033957600080fd5b50610354600480360381019061034f9190611bf0565b610b88565b005b34801561036257600080fd5b5061037d60048036038101906103789190611db3565b610c0b565b60405161038b929190611e90565b60405180910390f35b6103a867b8237d27482ab06b60c01b610c92565b6103b0610c95565b6103c467e2f107173549500460c01b610c92565b6103d86701033209d47e5b2460c01b610c92565b6103ec67dcd4652c61f0b32d60c01b610c92565b61040067eae392c3eb511cc760c01b610c92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161045a9190611ecf565b6000604051808303818588803b15801561047357600080fd5b505af1158015610487573d6000803e3d6000fd5b505050505050565b6104a3672907e6d97c3d1da360c01b610c92565b6104ab610c95565b6104bf678ac019c63563710260c01b610c92565b6104d367da1f1c840719888260c01b610c92565b6104e767bc135ce98e9f326f60c01b610c92565b6104fb67532d977f60999f3e60c01b610c92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610556929190611ef9565b600060405180830381600087803b15801561057057600080fd5b505af1158015610584573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105b8610c95565b6105c26000610d13565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080366000610607675f7000c4a500d1ef60c01b610dd7565b61061b67f4d7ccfe3412ce1b60c01b610dd7565b858560149060549261062f93929190611f2c565b81019061063c9190611f67565b8094508195505050610658671240e566567b251260c01b610dd7565b8585605490809261066b93929190611f2c565b9150915092959194509250565b600061068e6792fea9b48daadc9e60c01b610dd7565b6106a26793acbaf4c00babb260c01b610dd7565b6106b6671584f5c82e62443860c01b610dd7565b6106bf84610dda565b4630600160006106ce89610e6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054868660405160200161072096959493929190611fa7565b6040516020818303038152906040528051906020012090509392505050565b60016020528060005260406000206000915090505481565b61076b672cf57c41b8b89fcb60c01b610c92565b61077f6799497fbe705cd9f760c01b610c92565b610793679b4512fe9e58bae960c01b610c92565b61079b610ef5565b6107af6793ce2f3709fe770560c01b610c92565b6107c36790067c65a6f5d3a860c01b610c92565b6107cf84848484610fe9565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61080d67ec8a9719e7b677d060c01b610c92565b610815610c95565b61082967672cc496b6067cea60c01b610c92565b61083d674fdbd001b77629ae60c01b610c92565b610851677362eae3491c0ae160c01b610c92565b6108656797f9e99fb1d4b33860c01b610c92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108cd57600080fd5b505af11580156108e1573d6000803e3d6000fd5b50505050565b6108fb67c9ef1b986fb51fe860c01b610c92565b610903610c95565b61091767de53cad8928d67f560c01b610c92565b61092b677af1d989d252676f60c01b610c92565b61093f676fd423196847dbb160c01b610c92565b61095367097023434434ee0460c01b610c92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016109ac919061200f565b600060405180830381600087803b1580156109c657600080fd5b505af11580156109da573d6000803e3d6000fd5b5050505050565b60006109f767f6be01970597753160c01b610c92565b610a0b673f87ae81816372b460c01b610c92565b610a1f67bd328ab4ce68c2fb60c01b610c92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a789190611944565b602060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab9919061203f565b905090565b610ad2673943ebd1bec8d2d660c01b610c92565b610ae66702fc4196924a47ac60c01b610c92565b610afa675d10604969f00bcf60c01b610c92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610b549190611944565b6000604051808303818588803b158015610b6d57600080fd5b505af1158015610b81573d6000803e3d6000fd5b5050505050565b610b90610c95565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf6906120ef565b60405180910390fd5b610c0881610d13565b50565b60606000610c236791cf27427781cd8860c01b610c92565b610c37676434b0ee41880ab260c01b610c92565b610c4b67f2c91afe86e9062d60c01b610c92565b610c53610ef5565b610c676723ccedb6dfbcc30860c01b610c92565b610c7b67287492035946b96c60c01b610c92565b610c86858585611074565b91509150935093915050565b50565b610c9d611415565b73ffffffffffffffffffffffffffffffffffffffff16610cbb6105c4565b73ffffffffffffffffffffffffffffffffffffffff1614610d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d089061215b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6060610df0678bd2fc9c99fb458c60c01b610dd7565b610e0467990d544f4970b98d60c01b610dd7565b610e18675b49bfe7b20a4c4c60c01b610dd7565b36600083806101200190610e2c919061218a565b91509150610e446719482ab37e587f7760c01b610dd7565b8360208184030360405194506020810185016040528085528082602087013750505050919050565b6000610e8267e1c1c6be6d21e0b660c01b61141d565b610e9667169e881823fa915860c01b61141d565b610eaa675cfc74aca58d577760c01b61141d565b6000610ec067ee6cead2c727cb3b60c01b61141d565b82359050610ed867d47ac8b49cb9c10f60c01b61141d565b610eec67f19fd641611eb47860c01b61141d565b80915050919050565b610f096793fe0ed3ca04f82b60c01b610c92565b610f1d678abd782107e62dce60c01b610c92565b610f3167b9c2ce2852bf0cf360c01b610c92565b610f4567f8314810c2ffd6e460c01b610c92565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca90612239565b60405180910390fd5b610fe7677eb1fed1a5060b5e60c01b610c92565b565b610ffd67fadd006a881f054660c01b610c92565b61101167d9873e623a945ead60c01b610c92565b61102567b1300829c5ca164560c01b610c92565b61103967b80ccfd3afb0094c60c01b610c92565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106b906122a5565b60405180910390fd5b6060600061108c672793ef61be7744c360c01b610dd7565b6110a067e626d39e28baadae60c01b610dd7565b6110b4670ea326c002162d9560c01b610dd7565b6110c8673d142b2d5d37369360c01b610dd7565b6000803660006110e7898061012001906110e2919061218a565b6105ed565b935093509350935061110367fc8912ecfdb7d1b960c01b610dd7565b61111767ef8192294b994c0660c01b610dd7565b61112b67b58f514d8e265ee960c01b610dd7565b60408282905014801561114e575061114d674c466c780b08aaf360c01b611420565b5b8061117857506041828290501480156111775750611176679dd5dc46e1895f5a60c01b611420565b5b5b6111b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ae90612337565b60405180910390fd5b6111cb676a48a8b55930cb0c60c01b610dd7565b6111df676c73138ae6e7339560c01b610dd7565b6111f367fa5abca08c1d544c60c01b610dd7565b60006112086112038b8787610678565b61142b565b905061121e673aa249beaecff5f660c01b610dd7565b6001600061122b8c610e6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061127690612386565b919050555061128f67497725b4df5b283e60c01b610dd7565b6112a36758684106210bc47c60c01b610dd7565b6112f18184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061145b565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146113aa5761135767cf031f593d72d00c60c01b610dd7565b61136b67083effb3f6fb0e9560c01b610dd7565b61137f6773a1f322df62fd1c60c01b610dd7565b61138b60018686611482565b604051806020016040528060008152509096509650505050505061140d565b6113be67b3365397d484c8b660c01b610dd7565b6113d267424bb3bbc8c24b4e60c01b610dd7565b6113e6677be32ae1b65199d460c01b610dd7565b6113f260008686611482565b60405180602001604052806000815250909650965050505050505b935093915050565b600033905090565b50565b600060019050919050565b60008160405160200161143e9190612446565b604051602081830303815290604052805190602001209050919050565b600080600061146a858561152e565b915091506114778161157f565b819250505092915050565b600061149867f46661bb4e8bad1e60c01b6116e5565b6114ac67ad115cf58922913f60c01b6116e5565b6114c067e939de70e4ee463c60c01b6116e5565b60d08265ffffffffffff16901b60a08465ffffffffffff16901b8580156114f757506114f6675d24490627414a1d60c01b6116e8565b5b8061151257506115116748f460bd74afa2fc60c01b6116f3565b5b61151d576000611520565b60015b60ff16171790509392505050565b600080604183510361156f5760008060006020860151925060408601519150606086015160001a9050611563878285856116fa565b94509450505050611578565b60006002915091505b9250929050565b600060048111156115935761159261246c565b5b8160048111156115a6576115a561246c565b5b03156116e257600160048111156115c0576115bf61246c565b5b8160048111156115d3576115d261246c565b5b03611613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160a906124e7565b60405180910390fd5b600260048111156116275761162661246c565b5b81600481111561163a5761163961246c565b5b0361167a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167190612553565b60405180910390fd5b6003600481111561168e5761168d61246c565b5b8160048111156116a1576116a061246c565b5b036116e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d8906125e5565b60405180910390fd5b5b50565b50565b600060019050919050565b6000919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156117355760006003915091506117d3565b60006001878787876040516000815260200160405260405161175a9493929190612621565b6020604051602081039080840390855afa15801561177c573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117ca576000600192509250506117d3565b80600092509250505b94509492505050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6117ff816117e6565b811461180a57600080fd5b50565b60008135905061181c816117f6565b92915050565b600060208284031215611838576118376117dc565b5b60006118468482850161180d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061187a8261184f565b9050919050565b61188a8161186f565b811461189557600080fd5b50565b6000813590506118a781611881565b92915050565b6000819050919050565b6118c0816118ad565b81146118cb57600080fd5b50565b6000813590506118dd816118b7565b92915050565b600080604083850312156118fa576118f96117dc565b5b600061190885828601611898565b9250506020611919858286016118ce565b9150509250929050565b600061192e8261184f565b9050919050565b61193e81611923565b82525050565b60006020820190506119596000830184611935565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126119845761198361195f565b5b8235905067ffffffffffffffff8111156119a1576119a0611964565b5b6020830191508360018202830111156119bd576119bc611969565b5b9250929050565b600080602083850312156119db576119da6117dc565b5b600083013567ffffffffffffffff8111156119f9576119f86117e1565b5b611a058582860161196e565b92509250509250929050565b600065ffffffffffff82169050919050565b611a2c81611a11565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000611a6f8385611a32565b9350611a7c838584611a43565b611a8583611a52565b840190509392505050565b6000606082019050611aa56000830187611a23565b611ab26020830186611a23565b8181036040830152611ac5818486611a63565b905095945050505050565b600080fd5b60006101608284031215611aec57611aeb611ad0565b5b81905092915050565b611afe81611a11565b8114611b0957600080fd5b50565b600081359050611b1b81611af5565b92915050565b600080600060608486031215611b3a57611b396117dc565b5b600084013567ffffffffffffffff811115611b5857611b576117e1565b5b611b6486828701611ad5565b9350506020611b7586828701611b0c565b9250506040611b8686828701611b0c565b9150509250925092565b6000819050919050565b611ba381611b90565b82525050565b6000602082019050611bbe6000830184611b9a565b92915050565b611bcd81611923565b8114611bd857600080fd5b50565b600081359050611bea81611bc4565b92915050565b600060208284031215611c0657611c056117dc565b5b6000611c1484828501611bdb565b91505092915050565b611c26816118ad565b82525050565b6000602082019050611c416000830184611c1d565b92915050565b60038110611c5457600080fd5b50565b600081359050611c6681611c47565b92915050565b60008060008060608587031215611c8657611c856117dc565b5b6000611c9487828801611c57565b945050602085013567ffffffffffffffff811115611cb557611cb46117e1565b5b611cc18782880161196e565b93509350506040611cd4878288016118ce565b91505092959194509250565b6000819050919050565b6000611d05611d00611cfb8461184f565b611ce0565b61184f565b9050919050565b6000611d1782611cea565b9050919050565b6000611d2982611d0c565b9050919050565b611d3981611d1e565b82525050565b6000602082019050611d546000830184611d30565b92915050565b600060208284031215611d7057611d6f6117dc565b5b6000611d7e84828501611898565b91505092915050565b611d9081611b90565b8114611d9b57600080fd5b50565b600081359050611dad81611d87565b92915050565b600080600060608486031215611dcc57611dcb6117dc565b5b600084013567ffffffffffffffff811115611dea57611de96117e1565b5b611df686828701611ad5565b9350506020611e0786828701611d9e565b9250506040611e18868287016118ce565b9150509250925092565b600081519050919050565b60005b83811015611e4b578082015181840152602081019050611e30565b60008484015250505050565b6000611e6282611e22565b611e6c8185611a32565b9350611e7c818560208601611e2d565b611e8581611a52565b840191505092915050565b60006040820190508181036000830152611eaa8185611e57565b9050611eb96020830184611c1d565b9392505050565b611ec9816117e6565b82525050565b6000602082019050611ee46000830184611ec0565b92915050565b611ef38161186f565b82525050565b6000604082019050611f0e6000830185611eea565b611f1b6020830184611c1d565b9392505050565b600080fd5b600080fd5b60008085851115611f4057611f3f611f22565b5b83861115611f5157611f50611f27565b5b6001850283019150848603905094509492505050565b60008060408385031215611f7e57611f7d6117dc565b5b6000611f8c85828601611b0c565b9250506020611f9d85828601611b0c565b9150509250929050565b600060c0820190508181036000830152611fc18189611e57565b9050611fd06020830188611c1d565b611fdd6040830187611935565b611fea6060830186611c1d565b611ff76080830185611a23565b61200460a0830184611a23565b979650505050505050565b60006020820190506120246000830184611eea565b92915050565b600081519050612039816118b7565b92915050565b600060208284031215612055576120546117dc565b5b60006120638482850161202a565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006120d960268361206c565b91506120e48261207d565b604082019050919050565b60006020820190508181036000830152612108816120cc565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061214560208361206c565b91506121508261210f565b602082019050919050565b6000602082019050818103600083015261217481612138565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126121a7576121a661217b565b5b80840192508235915067ffffffffffffffff8211156121c9576121c8612180565b5b6020830192506001820236038313156121e5576121e4612185565b5b509250929050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b600061222360158361206c565b915061222e826121ed565b602082019050919050565b6000602082019050818103600083015261225281612216565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b600061228f600d8361206c565b915061229a82612259565b602082019050919050565b600060208201905081810360008301526122be81612282565b9050919050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b600061232160408361206c565b915061232c826122c5565b604082019050919050565b6000602082019050818103600083015261235081612314565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612391826118ad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123c3576123c2612357565b5b600182019050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b600061240f601c836123ce565b915061241a826123d9565b601c82019050919050565b6000819050919050565b61244061243b82611b90565b612425565b82525050565b600061245182612402565b915061245d828461242f565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006124d160188361206c565b91506124dc8261249b565b602082019050919050565b60006020820190508181036000830152612500816124c4565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b600061253d601f8361206c565b915061254882612507565b602082019050919050565b6000602082019050818103600083015261256c81612530565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006125cf60228361206c565b91506125da82612573565b604082019050919050565b600060208201905081810360008301526125fe816125c2565b9050919050565b600060ff82169050919050565b61261b81612605565b82525050565b60006080820190506126366000830187611b9a565b6126436020830186612612565b6126506040830185611b9a565b61265d6060830184611b9a565b9594505050505056fea26469706673582212203421721ea918f01dd44f1d75eb75bd9513ae5efec5c89897611613f19c0ed5db64736f6c63430008110033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  override connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}
