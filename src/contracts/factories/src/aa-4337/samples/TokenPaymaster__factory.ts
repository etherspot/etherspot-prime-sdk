/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TokenPaymaster,
  TokenPaymasterInterface,
} from "../../../../src/aa-4337/samples/TokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountFactory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "theFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200377938038062003779833981810160405281019062000037919062000855565b8182826200005a6200004e6200014660201b60201c565b6200014e60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508160049080519060200190620000a79291906200055e565b508060059080519060200190620000c09291906200055e565b5050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506200010a3060016200021260201b60201c565b6200013d30337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6200038160201b60201c565b50505062000bac565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200027c9062000931565b60405180910390fd5b62000299600083836200055460201b60201c565b8060036000828254620002ad91906200098c565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003619190620009fa565b60405180910390a36200037d600083836200055960201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620003f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003eb9062000a8d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000467576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200045e9062000b25565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051620005479190620009fa565b60405180910390a3505050565b505050565b505050565b8280546200056c9062000b76565b90600052602060002090601f016020900481019282620005905760008555620005dc565b82601f10620005ab57805160ff1916838001178555620005dc565b82800160010185558215620005dc579182015b82811115620005db578251825591602001919060010190620005be565b5b509050620005eb9190620005ef565b5090565b5b808211156200060a576000816000905550600101620005f0565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200064f8262000622565b9050919050565b620006618162000642565b81146200066d57600080fd5b50565b600081519050620006818162000656565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006dc8262000691565b810181811067ffffffffffffffff82111715620006fe57620006fd620006a2565b5b80604052505050565b6000620007136200060e565b9050620007218282620006d1565b919050565b600067ffffffffffffffff821115620007445762000743620006a2565b5b6200074f8262000691565b9050602081019050919050565b60005b838110156200077c5780820151818401526020810190506200075f565b838111156200078c576000848401525b50505050565b6000620007a9620007a38462000726565b62000707565b905082815260208101848484011115620007c857620007c76200068c565b5b620007d58482856200075c565b509392505050565b600082601f830112620007f557620007f462000687565b5b81516200080784826020860162000792565b91505092915050565b60006200081d8262000642565b9050919050565b6200082f8162000810565b81146200083b57600080fd5b50565b6000815190506200084f8162000824565b92915050565b60008060006060848603121562000871576200087062000618565b5b6000620008818682870162000670565b935050602084015167ffffffffffffffff811115620008a557620008a46200061d565b5b620008b386828701620007dd565b9250506040620008c6868287016200083e565b9150509250925092565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000919601f83620008d0565b91506200092682620008e1565b602082019050919050565b600060208201905081810360008301526200094c816200090a565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009998262000953565b9150620009a68362000953565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620009de57620009dd6200095d565b5b828201905092915050565b620009f48162000953565b82525050565b600060208201905062000a116000830184620009e9565b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600062000a75602483620008d0565b915062000a828262000a17565b604082019050919050565b6000602082019050818103600083015262000aa88162000a66565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600062000b0d602283620008d0565b915062000b1a8262000aaf565b604082019050919050565b6000602082019050818103600083015262000b408162000afe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000b8f57607f821691505b6020821081141562000ba65762000ba562000b47565b5b50919050565b60805160a051612b6f62000c0a60003960008181610991015261188501526000818161061d0152818161077301528181610a6901528181610a9501528181610b1f01528181610baf01528181610c4e015261140a0152612b6f6000f3fe6080604052600436106101815760003560e01c80639f5ca221116100d1578063c23a5cea1161008a578063dd62ed3e11610064578063dd62ed3e14610546578063f0dda65c14610583578063f2fde38b146105ac578063f465c77e146105d557610181565b8063c23a5cea146104e8578063c399ec8814610511578063d0e30db01461053c57610181565b80639f5ca221146103d8578063a457c2d714610403578063a9059cbb14610440578063a9a234091461047d578063b0d691fe146104a6578063bb9fe6bf146104d157610181565b8063313ce5671161013e578063715018a611610118578063715018a614610340578063796d4371146103575780638da5cb5b1461038257806395d89b41146103ad57610181565b8063313ce5671461029b57806339509351146102c657806370a082311461030357610181565b80630396cb601461018657806306fdde03146101a2578063095ea7b3146101cd57806318160ddd1461020a578063205c28781461023557806323b872dd1461025e575b600080fd5b6101a0600480360381019061019b919061195b565b610613565b005b3480156101ae57600080fd5b506101b76106aa565b6040516101c49190611a21565b60405180910390f35b3480156101d957600080fd5b506101f460048036038101906101ef9190611ad7565b61073c565b6040516102019190611b32565b60405180910390f35b34801561021657600080fd5b5061021f61075f565b60405161022c9190611b5c565b60405180910390f35b34801561024157600080fd5b5061025c60048036038101906102579190611bb5565b610769565b005b34801561026a57600080fd5b5061028560048036038101906102809190611bf5565b610802565b6040516102929190611b32565b60405180910390f35b3480156102a757600080fd5b506102b0610831565b6040516102bd9190611c64565b60405180910390f35b3480156102d257600080fd5b506102ed60048036038101906102e89190611ad7565b61083a565b6040516102fa9190611b32565b60405180910390f35b34801561030f57600080fd5b5061032a60048036038101906103259190611c7f565b610871565b6040516103379190611b5c565b60405180910390f35b34801561034c57600080fd5b506103556108ba565b005b34801561036357600080fd5b5061036c6108ce565b6040516103799190611b5c565b60405180910390f35b34801561038e57600080fd5b506103976108d4565b6040516103a49190611cbb565b60405180910390f35b3480156103b957600080fd5b506103c26108fd565b6040516103cf9190611a21565b60405180910390f35b3480156103e457600080fd5b506103ed61098f565b6040516103fa9190611cbb565b60405180910390f35b34801561040f57600080fd5b5061042a60048036038101906104259190611ad7565b6109b3565b6040516104379190611b32565b60405180910390f35b34801561044c57600080fd5b5061046760048036038101906104629190611ad7565b610a2a565b6040516104749190611b32565b60405180910390f35b34801561048957600080fd5b506104a4600480360381019061049f9190611d60565b610a4d565b005b3480156104b257600080fd5b506104bb610a67565b6040516104c89190611e33565b60405180910390f35b3480156104dd57600080fd5b506104e6610a8b565b005b3480156104f457600080fd5b5061050f600480360381019061050a9190611e4e565b610b15565b005b34801561051d57600080fd5b50610526610bab565b6040516105339190611b5c565b60405180910390f35b610544610c4c565b005b34801561055257600080fd5b5061056d60048036038101906105689190611e7b565b610cda565b60405161057a9190611b5c565b60405180910390f35b34801561058f57600080fd5b506105aa60048036038101906105a59190611ad7565b610d61565b005b3480156105b857600080fd5b506105d360048036038101906105ce9190611c7f565b610d77565b005b3480156105e157600080fd5b506105fc60048036038101906105f79190611f16565b610dc9565b60405161060a929190611fda565b60405180910390f35b61061b610dec565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016106759190612019565b6000604051808303818588803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b505050505050565b6060600480546106b990612063565b80601f01602080910402602001604051908101604052809291908181526020018280546106e590612063565b80156107325780601f1061070757610100808354040283529160200191610732565b820191906000526020600020905b81548152906001019060200180831161071557829003601f168201915b5050505050905090565b600080610747610e6a565b9050610754818585610e72565b600191505092915050565b6000600354905090565b610771610dec565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016107cc9291906120a4565b600060405180830381600087803b1580156107e657600080fd5b505af11580156107fa573d6000803e3d6000fd5b505050505050565b60008061080d610e6a565b905061081a85828561103d565b6108258585856110c9565b60019150509392505050565b60006012905090565b600080610845610e6a565b90506108668185856108578589610cda565b61086191906120fc565b610e72565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108c2610dec565b6108cc6000611344565b565b613a9881565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461090c90612063565b80601f016020809104026020016040519081016040528092919081815260200182805461093890612063565b80156109855780601f1061095a57610100808354040283529160200191610985565b820191906000526020600020905b81548152906001019060200180831161096857829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806109be610e6a565b905060006109cc8286610cda565b905083811015610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a08906121c4565b60405180910390fd5b610a1e8286868403610e72565b60019250505092915050565b600080610a35610e6a565b9050610a428185856110c9565b600191505092915050565b610a55611408565b610a6184848484611498565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a93610dec565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610afb57600080fd5b505af1158015610b0f573d6000803e3d6000fd5b50505050565b610b1d610dec565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610b7691906121e4565b600060405180830381600087803b158015610b9057600080fd5b505af1158015610ba4573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c069190611cbb565b602060405180830381865afa158015610c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c479190612214565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610ca69190611cbb565b6000604051808303818588803b158015610cbf57600080fd5b505af1158015610cd3573d6000803e3d6000fd5b5050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d69610dec565b610d7382826114d8565b5050565b610d7f610dec565b610d9230610d8b6108d4565b6000610e72565b610d9b81611630565b610dc630827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e72565b50565b60606000610dd5611408565b610de08585856116b4565b91509150935093915050565b610df4610e6a565b73ffffffffffffffffffffffffffffffffffffffff16610e126108d4565b73ffffffffffffffffffffffffffffffffffffffff1614610e68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5f9061228d565b60405180910390fd5b565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ee2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed99061231f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f49906123b1565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110309190611b5c565b60405180910390a3505050565b60006110498484610cda565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110c357818110156110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac9061241d565b60405180910390fd5b6110c28484848403610e72565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611139576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611130906124af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a090612541565b60405180910390fd5b6111b483838361182f565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561123b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611232906125d3565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161132b9190611b5c565b60405180910390a361133e848484611834565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148d9061263f565b60405180910390fd5b565b600083838101906114a99190611e4e565b905060006114c3613a98846114be91906120fc565b611839565b90506114d08230836110c9565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153f906126ab565b60405180910390fd5b6115546000838361182f565b806003600082825461156691906120fc565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116189190611b5c565b60405180910390a361162c60008383611834565b5050565b611638610dec565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169f9061273d565b60405180910390fd5b6116b181611344565b50565b60606000806116c284611839565b9050613a988660a001351161170c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611703906127cf565b60405180910390fd5b600086806040019061171e91906127fe565b9050146117905761172e8661184f565b8061174a8760000160208101906117459190611c7f565b610871565b101561178b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611782906128d3565b60405180910390fd5b6117ee565b806117ac8760000160208101906117a79190611c7f565b610871565b10156117ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e49061293f565b60405180910390fd5b5b8560000160208101906118019190611c7f565b6040516020016118119190611cbb565b60405160208183030381529060405260009250925050935093915050565b505050565b505050565b6000606482611848919061298e565b9050919050565b600081806040019061186191906127fe565b600090601492611873939291906129c9565b9061187e9190612a48565b60601c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190890612b19565b60405180910390fd5b5050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6119388161191f565b811461194357600080fd5b50565b6000813590506119558161192f565b92915050565b60006020828403121561197157611970611915565b5b600061197f84828501611946565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119c25780820151818401526020810190506119a7565b838111156119d1576000848401525b50505050565b6000601f19601f8301169050919050565b60006119f382611988565b6119fd8185611993565b9350611a0d8185602086016119a4565b611a16816119d7565b840191505092915050565b60006020820190508181036000830152611a3b81846119e8565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a6e82611a43565b9050919050565b611a7e81611a63565b8114611a8957600080fd5b50565b600081359050611a9b81611a75565b92915050565b6000819050919050565b611ab481611aa1565b8114611abf57600080fd5b50565b600081359050611ad181611aab565b92915050565b60008060408385031215611aee57611aed611915565b5b6000611afc85828601611a8c565b9250506020611b0d85828601611ac2565b9150509250929050565b60008115159050919050565b611b2c81611b17565b82525050565b6000602082019050611b476000830184611b23565b92915050565b611b5681611aa1565b82525050565b6000602082019050611b716000830184611b4d565b92915050565b6000611b8282611a43565b9050919050565b611b9281611b77565b8114611b9d57600080fd5b50565b600081359050611baf81611b89565b92915050565b60008060408385031215611bcc57611bcb611915565b5b6000611bda85828601611ba0565b9250506020611beb85828601611ac2565b9150509250929050565b600080600060608486031215611c0e57611c0d611915565b5b6000611c1c86828701611a8c565b9350506020611c2d86828701611a8c565b9250506040611c3e86828701611ac2565b9150509250925092565b600060ff82169050919050565b611c5e81611c48565b82525050565b6000602082019050611c796000830184611c55565b92915050565b600060208284031215611c9557611c94611915565b5b6000611ca384828501611a8c565b91505092915050565b611cb581611a63565b82525050565b6000602082019050611cd06000830184611cac565b92915050565b60038110611ce357600080fd5b50565b600081359050611cf581611cd6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611d2057611d1f611cfb565b5b8235905067ffffffffffffffff811115611d3d57611d3c611d00565b5b602083019150836001820283011115611d5957611d58611d05565b5b9250929050565b60008060008060608587031215611d7a57611d79611915565b5b6000611d8887828801611ce6565b945050602085013567ffffffffffffffff811115611da957611da861191a565b5b611db587828801611d0a565b93509350506040611dc887828801611ac2565b91505092959194509250565b6000819050919050565b6000611df9611df4611def84611a43565b611dd4565b611a43565b9050919050565b6000611e0b82611dde565b9050919050565b6000611e1d82611e00565b9050919050565b611e2d81611e12565b82525050565b6000602082019050611e486000830184611e24565b92915050565b600060208284031215611e6457611e63611915565b5b6000611e7284828501611ba0565b91505092915050565b60008060408385031215611e9257611e91611915565b5b6000611ea085828601611a8c565b9250506020611eb185828601611a8c565b9150509250929050565b600080fd5b60006101608284031215611ed757611ed6611ebb565b5b81905092915050565b6000819050919050565b611ef381611ee0565b8114611efe57600080fd5b50565b600081359050611f1081611eea565b92915050565b600080600060608486031215611f2f57611f2e611915565b5b600084013567ffffffffffffffff811115611f4d57611f4c61191a565b5b611f5986828701611ec0565b9350506020611f6a86828701611f01565b9250506040611f7b86828701611ac2565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000611fac82611f85565b611fb68185611f90565b9350611fc68185602086016119a4565b611fcf816119d7565b840191505092915050565b60006040820190508181036000830152611ff48185611fa1565b90506120036020830184611b4d565b9392505050565b6120138161191f565b82525050565b600060208201905061202e600083018461200a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061207b57607f821691505b6020821081141561208f5761208e612034565b5b50919050565b61209e81611b77565b82525050565b60006040820190506120b96000830185612095565b6120c66020830184611b4d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061210782611aa1565b915061211283611aa1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612147576121466120cd565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006121ae602583611993565b91506121b982612152565b604082019050919050565b600060208201905081810360008301526121dd816121a1565b9050919050565b60006020820190506121f96000830184612095565b92915050565b60008151905061220e81611aab565b92915050565b60006020828403121561222a57612229611915565b5b6000612238848285016121ff565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612277602083611993565b915061228282612241565b602082019050919050565b600060208201905081810360008301526122a68161226a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612309602483611993565b9150612314826122ad565b604082019050919050565b60006020820190508181036000830152612338816122fc565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061239b602283611993565b91506123a68261233f565b604082019050919050565b600060208201905081810360008301526123ca8161238e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612407601d83611993565b9150612412826123d1565b602082019050919050565b60006020820190508181036000830152612436816123fa565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612499602583611993565b91506124a48261243d565b604082019050919050565b600060208201905081810360008301526124c88161248c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061252b602383611993565b9150612536826124cf565b604082019050919050565b6000602082019050818103600083015261255a8161251e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006125bd602683611993565b91506125c882612561565b604082019050919050565b600060208201905081810360008301526125ec816125b0565b9050919050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000612629601583611993565b9150612634826125f3565b602082019050919050565b600060208201905081810360008301526126588161261c565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612695601f83611993565b91506126a08261265f565b602082019050919050565b600060208201905081810360008301526126c481612688565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612727602683611993565b9150612732826126cb565b604082019050919050565b600060208201905081810360008301526127568161271a565b9050919050565b7f546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f722060008201527f706f73744f700000000000000000000000000000000000000000000000000000602082015250565b60006127b9602683611993565b91506127c48261275d565b604082019050919050565b600060208201905081810360008301526127e8816127ac565b9050919050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261281b5761281a6127ef565b5b80840192508235915067ffffffffffffffff82111561283d5761283c6127f4565b5b602083019250600182023603831315612859576128586127f9565b5b509250929050565b7f546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d60008201527f6372656174652900000000000000000000000000000000000000000000000000602082015250565b60006128bd602783611993565b91506128c882612861565b604082019050919050565b600060208201905081810360008301526128ec816128b0565b9050919050565b7f546f6b656e5061796d61737465723a206e6f2062616c616e6365000000000000600082015250565b6000612929601a83611993565b9150612934826128f3565b602082019050919050565b600060208201905081810360008301526129588161291c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061299982611aa1565b91506129a483611aa1565b9250826129b4576129b361295f565b5b828204905092915050565b600080fd5b600080fd5b600080858511156129dd576129dc6129bf565b5b838611156129ee576129ed6129c4565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b6000612a548383612a04565b82612a5f8135612a0f565b92506014821015612a9f57612a9a7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802612a3b565b831692505b505092915050565b7f546f6b656e5061796d61737465723a2077726f6e67206163636f756e7420666160008201527f63746f7279000000000000000000000000000000000000000000000000000000602082015250565b6000612b03602583611993565b9150612b0e82612aa7565b604082019050919050565b60006020820190508181036000830152612b3281612af6565b905091905056fea2646970667358221220e79ec71e5840aa90a1271e7c33822c6cce68c24ee1f7a160b52aac0d2cf717f064736f6c634300080c0033";

type TokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPaymaster__factory extends ContractFactory {
  constructor(...args: TokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    accountFactory: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenPaymaster> {
    return super.deploy(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    ) as Promise<TokenPaymaster>;
  }
  override getDeployTransaction(
    accountFactory: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    );
  }
  override attach(address: string): TokenPaymaster {
    return super.attach(address) as TokenPaymaster;
  }
  override connect(signer: Signer): TokenPaymaster__factory {
    return super.connect(signer) as TokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPaymasterInterface {
    return new utils.Interface(_abi) as TokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPaymaster {
    return new Contract(address, _abi, signerOrProvider) as TokenPaymaster;
  }
}
