/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Account,
  AccountInterface,
} from "../../../src/backward_compatibility_helpers/Account";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107c03803806107c08339818101604052810190610032919061011d565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b6106548061016c6000396000f3fe6080604052600436106100435760003560e01c80633f579f42146100b25780635c60da1b146100ef5780637b1039991461011a578063d784d426146101455761004a565b3661004a57005b34801561005657600080fd5b50600080369050146100b05760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050368060008037600080826000855af43d806000803e81600081146100ab57816000f35b816000fd5b005b3480156100be57600080fd5b506100d960048036038101906100d491906103c3565b61016e565b6040516100e691906104d0565b60405180910390f35b3480156100fb57600080fd5b50610104610233565b6040516101119190610501565b60405180910390f35b34801561012657600080fd5b5061012f610257565b60405161013c9190610501565b60405180910390f35b34801561015157600080fd5b5061016c6004803603810190610167919061051c565b61027d565b005b60608060008673ffffffffffffffffffffffffffffffffffffffff1686868660405161019b929190610588565b60006040518083038185875af1925050503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b50809350819250505080610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d906105fe565b60405180910390fd5b8192505050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f5826102ca565b9050919050565b610305816102ea565b811461031057600080fd5b50565b600081359050610322816102fc565b92915050565b6000819050919050565b61033b81610328565b811461034657600080fd5b50565b60008135905061035881610332565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103835761038261035e565b5b8235905067ffffffffffffffff8111156103a05761039f610363565b5b6020830191508360018202830111156103bc576103bb610368565b5b9250929050565b600080600080606085870312156103dd576103dc6102c0565b5b60006103eb87828801610313565b94505060206103fc87828801610349565b935050604085013567ffffffffffffffff81111561041d5761041c6102c5565b5b6104298782880161036d565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610471578082015181840152602081019050610456565b83811115610480576000848401525b50505050565b6000601f19601f8301169050919050565b60006104a282610437565b6104ac8185610442565b93506104bc818560208601610453565b6104c581610486565b840191505092915050565b600060208201905081810360008301526104ea8184610497565b905092915050565b6104fb816102ea565b82525050565b600060208201905061051660008301846104f2565b92915050565b600060208284031215610532576105316102c0565b5b600061054084828501610313565b91505092915050565b600081905092915050565b82818337600083830152505050565b600061056f8385610549565b935061057c838584610554565b82840190509392505050565b6000610595828486610563565b91508190509392505050565b600082825260208201905092915050565b7f4163636f756e743a207472616e73616374696f6e207265766572746564000000600082015250565b60006105e8601d836105a1565b91506105f3826105b2565b602082019050919050565b60006020820190508181036000830152610617816105db565b905091905056fea26469706673582212206b9b9ebc1fe271ad52229dcc3cf6ce7ac54f7f1e3122a2d683a44b4e1c5be84764736f6c634300080c0033";

type AccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Account__factory extends ContractFactory {
  constructor(...args: AccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    registry_: PromiseOrValue<string>,
    implementation_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Account> {
    return super.deploy(
      registry_,
      implementation_,
      overrides || {}
    ) as Promise<Account>;
  }
  override getDeployTransaction(
    registry_: PromiseOrValue<string>,
    implementation_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      registry_,
      implementation_,
      overrides || {}
    );
  }
  override attach(address: string): Account {
    return super.attach(address) as Account;
  }
  override connect(signer: Signer): Account__factory {
    return super.connect(signer) as Account__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountInterface {
    return new utils.Interface(_abi) as AccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Account {
    return new Contract(address, _abi, signerOrProvider) as Account;
  }
}
