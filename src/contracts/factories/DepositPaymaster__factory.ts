/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DepositPaymaster,
  DepositPaymasterInterface,
} from "../DepositPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461006c57601f611deb38819003918201601f19168301916001600160401b038311848410176100725780849260209460405283398101031261006c57516001600160a01b03811681141561006c5761005d9061008c565b604051611cfb90816100f08239f35b50600080fd5b50505050634e487b7160e01b600052604160045260246000fd5b60005460018060a01b031991338383161760005560018060a01b0391823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3169060015416176001553360005260046020524360406000205556fe6040608081526004361015610015575b50600080fd5b600090813560e01c80630396cb60146104c5578063205c2878146104ad578063382edd9e14610495578063493b0170146104615780634a6f84cf146104235780635476bd721461040b578063584465f2146103f4578063715018a6146103dd578063796d4371146103bc5780638da5cb5b1461036d5780639ed0fb6814610349578063a9a234091461032e578063addd5099146102c7578063b0d691fe1461028a578063bb9fe6bf14610273578063c23a5cea1461025c578063c23f001f146101e5578063c399ec88146101ba578063cc9c837c146101a2578063cd8f80c21461017e578063d0e30db01461016c578063f2fde38b146101525763f465c77e1461011f575061000f565b3461014e5761014a915061013d61013536610723565b919050611395565b92909151928392836107eb565b0390f35b5080fd5b503461014e5761016961016436610608565b6108e0565b51f35b5061017636610664565b610169611973565b503461014e5761018d36610664565b61016933600052600460205260006040812055565b503461014e576101696101b436610578565b91610fab565b503461014e5761014a91506101ce36610664565b6101d6611b34565b90519081529081906020820190565b503461014e5761014a915061024c6102276101ff366105c2565b919073ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5490519081529081906020820190565b503461014e5761016961026e36610608565b611c0b565b503461014e5761028236610664565b610169611b95565b503461014e5761014a915061029e36610664565b600154905173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b503461014e5761014a91506103086102de36610608565b73ffffffffffffffffffffffffffffffffffffffff80911660005260026020526040600020541690565b905173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b503461014e5761016961034036610690565b92919091611729565b503461014e5761035836610664565b61016933600052600460205243604060002055565b503461014e5773ffffffffffffffffffffffffffffffffffffffff61014a9261039536610664565b549151911673ffffffffffffffffffffffffffffffffffffffff1681529081906020820190565b5090346103d857506103cd36610664565b516188b88152602090f35b809150fd5b503461014e576103ec36610664565b61016961086d565b503461014e5761016961040636610608565b6116d8565b503461014e5761016961041d366105c2565b906109e9565b503461014e5761014a91506101d661043a36610608565b73ffffffffffffffffffffffffffffffffffffffff16600052600460205260406000205490565b503461014e5761014a915061047e610478366105c2565b90610f2f565b915190815260208101919091529081906040820190565b503461014e576101696104a736610578565b91610aa2565b503461014e576101696104bf3661053b565b906119ff565b506101696104d2366104d7565b611aae565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261000f5760043563ffffffff81168114156105155790565b5050600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116141561000f57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc604091011261000f576004356105718161051c565b9060243590565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc606091011261000f576004356105ae8161051c565b906024356105bb8161051c565b9060443590565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc604091011261000f576004356105f88161051c565b906024356106058161051c565b90565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261000f576004356106058161051c565b73ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc600091011261000f57565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261051557600435600381101561071b579160243567ffffffffffffffff928382116107115780602383011215610711578160040135938411610711576024848301011161070857602401919060443590565b50505050600080fd5b5050505050600080fd5b505050600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060608282011261071b576004359167ffffffffffffffff831161070857826101609203011261051557600401906024359060443590565b91908251928382526000905b8482106107d35750601f84602094957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093116107c6575b0116010190565b60008582860101526107bf565b90602090818082850101519082860101520190610788565b92919061080260209160408652604086019061077c565b930152565b1561080e57565b5060646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080547fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8216916108b5338414610807565b1682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e082604051a3565b6000549073ffffffffffffffffffffffffffffffffffffffff80831691610908338414610807565b16918215610961577fffffffffffffffffffffffff0000000000000000000000000000000000000000839116176000557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b5050505060846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff9081600091610a11828454163314610807565b168152600260205281604082205416610a53576040902091167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b9250505080fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81198111610a96570190565b610a9e610a5a565b0190565b91610aaf81303386610c35565b73ffffffffffffffffffffffffffffffffffffffff928381166000526002602052836040600020541615610b3857610b0e83610227610b169373ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b918254610a8a565b9055163314610b2157565b610b3633600052600460205260006040812055565b565b505050505060646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e0000000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610be757604052565b610bef610b9b565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610be757604052565b9092610b3693604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff809216602486015216604484015260648301526064825260a0820182811067ffffffffffffffff821117610cb1575b604052610d63565b610cb9610b9b565b610ca9565b9081602091031261051557518015158114156105155790565b15610cde57565b5060846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff169060405190610d8782610bcb565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b15610dfe5760008281928287610dd99796519301915af1610dd3610e60565b90610ecc565b80519081610de657505050565b82610b3693610df9938301019101610cbe565b610cd7565b50505060649150604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b3d15610ec7573d9067ffffffffffffffff8211610eba575b60405191610eae60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610bf4565b82523d6000602084013e565b610ec2610b9b565b610e78565b606090565b90919015610ed8575090565b81519192509015610eec5750805190602001fd5b610f2b91506040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260206004840152602483019061077c565b0390fd5b91909173ffffffffffffffffffffffffffffffffffffffff8091166000526003602052610f808360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b549216600052600460205260406000205490565b818110610f9f570390565b610fa7610a5a565b0390565b91903360005260046020526040600020541515806110a3575b1561101b57610b3692610ffb336102278373ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b83815481811061100e575b0390556110b1565b611016610a5a565b611006565b5050505060846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b60448201527f656e4465706f73697400000000000000000000000000000000000000000000006064820152fd5b506040600020544311610fc4565b610b369273ffffffffffffffffffffffffffffffffffffffff604051937fa9059cbb0000000000000000000000000000000000000000000000000000000060208601521660248401526044830152604482526080820182811067ffffffffffffffff821117610cb157604052610d63565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561071b570180359067ffffffffffffffff821161071b5760200191813603831361071b57565b1561117a57565b5060846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4465706f7369745061796d61737465723a207061796d6173746572416e64446160448201527f7461206d757374207370656369667920746f6b656e00000000000000000000006064820152fd5b909291928360141161070857831161071b57601401917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec0190565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000903581811693926014811061126f57505050565b60140360031b82901b16169150565b1561128557565b5060846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f60448201527f636b6564000000000000000000000000000000000000000000000000000000006064820152fd5b1561131057565b5060846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b6188b860a0820135111561150f57806114dd6113fc6113e36113dd6113d76113c4610120611509980187611122565b80916113d260288314611173565b6111ff565b9061123a565b60601c90565b73ffffffffffffffffffffffffffffffffffffffff1690565b9373ffffffffffffffffffffffffffffffffffffffff8335169261142961142383886115b2565b91611c8e565b61145d6114568673ffffffffffffffffffffffffffffffffffffffff166000526004602052604060002090565b541561127e565b6114978261148f876102278b73ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b541015611309565b6040519687956020870191959493909260809360a084019773ffffffffffffffffffffffffffffffffffffffff8092168552166020840152604083015260608201520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610bf4565b90600090565b50505060846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f60448201527f7220706f73744f700000000000000000000000000000000000000000000000006064820152fd5b90816020910312610515575190565b506040513d6000823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff8091166000526002602052604060002054168015611651576040517fd1eca9cf0000000000000000000000000000000000000000000000000000000081526004810192909252602090829060249082905afa908115611644575b60009161162c575090565b610605915061163b3d82610bf4565b3d810190611596565b61164c6115a5565b611621565b50505060846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4465706f7369745061796d61737465723a20756e737570706f7274656420746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff906116fd82600054163314610807565b167fffffffffffffffffffffffff00000000000000000000000000000000000000006001541617600155565b90919273ffffffffffffffffffffffffffffffffffffffff938460015416331415611877578360a091810103126107115760029383610b0e936117b76117d4946117b261181198359561177b8761051c565b60208601359661178a8861051c565b16946117ad6080820135936117a760406060850135940135611882565b90610a8a565b6118c0565b6118fd565b96816117c38993611939565b146118155761063e91309084610c35565b60005473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b9055565b50611844906102278373ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b61184f868254610f94565b905573ffffffffffffffffffffffffffffffffffffffff166000526003602052604060002090565b505050505050600080fd5b7e01df5959efbba7c2ad51be94be49d853cade78a80d9347cc0a1080436890a581116001166118b3575b6188b80290565b6118bb610a5a565b6118ac565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211811515166118f1570290565b6118f9610a5a565b0290565b8115611907570490565b5050507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6003111561194357565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff60015416803b15610515576000602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af180156119f2575b6119da5750565b6000906119e73d82610bf4565b3d8101031261000f57565b6119fa6115a5565b6119d3565b9073ffffffffffffffffffffffffffffffffffffffff600092611a26828554163314610807565b8160015416803b15611aa5578492918360449260405196879586947f205c287800000000000000000000000000000000000000000000000000000000865216600485015260248401525af18015611a98575b611a80575050565b8190611a8c3d82610bf4565b3d810103126103d85750565b611aa06115a5565b611a78565b50505050809150fd5b73ffffffffffffffffffffffffffffffffffffffff90600091611ad5818454163314610807565b6001541690813b15611b2d5763ffffffff6024849260405194859384927f0396cb6000000000000000000000000000000000000000000000000000000000845216600483015234905af18015611a9857611a80575050565b5050809150fd5b6024602073ffffffffffffffffffffffffffffffffffffffff60015416604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa9081156116445760009161162c575090565b73ffffffffffffffffffffffffffffffffffffffff600090611bbb818354163314610807565b60015416803b15611c05578180916004604051809481937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af18015611a9857611a80575050565b50809150fd5b73ffffffffffffffffffffffffffffffffffffffff90600091611c32818454163314610807565b806001541691823b15611c865790602484928360405195869485937fc23a5cea0000000000000000000000000000000000000000000000000000000085521660048401525af18015611a9857611a80575050565b505050809150fd5b61010060e0820135910135808214611cb357480180821015611cae575090565b905090565b509056fea3646970667358221220c8039880c9cd3d46a41fd5c576e5ff902ee2bffedebbe683091f1b764338ab8c6c6578706572696d656e74616cf564736f6c634300080c0041";

type DepositPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositPaymaster__factory extends ContractFactory {
  constructor(...args: DepositPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _entryPoint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DepositPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<DepositPaymaster>;
  }
  getDeployTransaction(
    _entryPoint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  attach(address: string): DepositPaymaster {
    return super.attach(address) as DepositPaymaster;
  }
  connect(signer: Signer): DepositPaymaster__factory {
    return super.connect(signer) as DepositPaymaster__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositPaymasterInterface {
    return new utils.Interface(_abi) as DepositPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositPaymaster {
    return new Contract(address, _abi, signerOrProvider) as DepositPaymaster;
  }
}
