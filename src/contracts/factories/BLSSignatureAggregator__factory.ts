/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BLSSignatureAggregator,
  BLSSignatureAggregatorInterface,
} from "../BLSSignatureAggregator";

const _abi = [
  {
    inputs: [],
    name: "BLS_DOMAIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
    ],
    name: "aggregateSignatures",
    outputs: [
      {
        internalType: "bytes",
        name: "aggregatesSignature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTrailingPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "userOpToMessage",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "validateUserOpSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "sigForUserOp",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612cce806100206000396000f3fe6080604052600436106100905760003560e01c806364c530cd1161005957806364c530cd14610193578063a6193531146101d0578063b7620eb41461020d578063c9e525df1461024a578063e3563a4f1461027557610090565b80629d925014610095578063275e2d79146100c057806340864431146100fd578063451711591461013a57806357f09b7214610156575b600080fd5b3480156100a157600080fd5b506100aa61029e565b6040516100b7919061161f565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e291906116b3565b6102c2565b6040516100f49190611799565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190611b05565b61041f565b6040516101319190611bf9565b60405180910390f35b610154600480360381019061014f9190611c8e565b610446565b005b34801561016257600080fd5b5061017d60048036038101906101789190611b05565b6104b6565b60405161018a9190611d52565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190611d92565b610563565b6040516101c79190611799565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f29190611b05565b610705565b604051610204919061161f565b60405180910390f35b34801561021957600080fd5b50610234600480360381019061022f9190611ddb565b610725565b6040516102419190611d52565b60405180910390f35b34801561025657600080fd5b5061025f6107a5565b60405161026c9190611e33565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190611ea4565b6107c9565b005b7fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b81565b606060008383905067ffffffffffffffff8111156102e3576102e26117c0565b5b60405190808252806020026020018201604052801561031c57816020015b6103096115a8565b8152602001906001900390816103015790505b50905060005b81518110156103bc5760008086868481811061034157610340611f25565b5b90506020028101906103539190611f63565b8061014001906103639190611f8c565b8101906103709190611fef565b9150915060405180604001604052808381526020018281525084848151811061039c5761039b611f25565b5b6020026020010181905250505080806103b49061205e565b915050610322565b5060006103e9827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610af4565b9050806000015181602001516040516020016104069291906120a7565b6040516020818303038152906040529250505092915050565b6104276115c2565b600061043283610bf7565b905061043e8382610c2f565b915050919050565b8173ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161048091906120df565b6000604051808303818588803b15801561049957600080fd5b505af11580156104ad573d6000803e3d6000fd5b50505050505050565b6104be6115e4565b6000826040015190506000815111156104e1576104da81610725565b915061055c565b826000015173ffffffffffffffffffffffffffffffffffffffff1663e02afbae6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610530573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055491906121c0565b91505061055e565b505b919050565b60606000828061014001906105789190611f8c565b810190610585919061229e565b9050600061059b84610596906122cb565b6104b6565b905060006105b1856105ac906122cb565b61041f565b905073__$b9791500c16b639726521ab5391f2dd20a$__63ebbdac918484846040518463ffffffff1660e01b81526004016105ee939291906123c9565b602060405180830381865af415801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190612439565b5073__$b9791500c16b639726521ab5391f2dd20a$__63ebbdac918484846040518463ffffffff1660e01b815260040161066b939291906123c9565b602060405180830381865af4158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190612439565b6106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e2906124c3565b60405180910390fd5b604051806020016040528060008152509350505050919050565b60008061071183610bf7565b905061071d8382610d06565b915050919050565b61072d6115e4565b60008251905060808111610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d9061252f565b60405180910390fd5b606081840103805183526020810151602084015260408101516040840152606081015160608401525050919050565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781565b6040828290501461080f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108069061259b565b60405180910390fd5b60008282810190610820919061229e565b9050600085859050905060008167ffffffffffffffff811115610846576108456117c0565b5b60405190808252806020026020018201604052801561087f57816020015b61086c6115e4565b8152602001906001900390816108645790505b50905060008267ffffffffffffffff81111561089e5761089d6117c0565b5b6040519080825280602002602001820160405280156108d757816020015b6108c46115c2565b8152602001906001900390816108bc5790505b50905060005b83811015610a2e5760008989838181106108fa576108f9611f25565b5b905060200281019061090c9190611f63565b610915906122cb565b90506000816000015190508073ffffffffffffffffffffffffffffffffffffffff1663e02afbae6175306040518263ffffffff1660e01b81526004016080604051808303818786fa15801561096e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061099391906121c0565b8584815181106109a6576109a5611f25565b5b60200260200101819052506109fb828685815181106109c8576109c7611f25565b5b60200260200101516040516020016109e09190611d52565b60405160208183030381529060405280519060200120610c2f565b848481518110610a0e57610a0d611f25565b5b602002602001018190525050508080610a269061205e565b9150506108dd565b5073__$b9791500c16b639726521ab5391f2dd20a$__63914137638584846040518463ffffffff1660e01b8152600401610a6a939291906127dd565b602060405180830381865af4158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190612439565b610aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae19061286e565b60405180910390fd5b5050505050505050565b610afc6115a8565b600083600081518110610b1257610b11611f25565b5b6020026020010151600001519050600084600081518110610b3657610b35611f25565b5b60200260200101516020015190506000600190506000600190505b8651811015610bc557610ba68484848a8581518110610b7357610b72611f25565b5b6020026020010151600001518b8681518110610b9257610b91611f25565b5b60200260200101516020015160018c610d45565b8094508195508296505050508080610bbd9061205e565b915050610b51565b50610bd2838383886113c4565b8093508194505050828460000181815250508184602001818152505050505092915050565b6000610c02826104b6565b604051602001610c129190611d52565b604051602081830303815290604052805190602001209050919050565b610c376115c2565b6000610c438484610d06565b905073__$b9791500c16b639726521ab5391f2dd20a$";

type BLSSignatureAggregatorConstructorParams =
  | [
      linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSSignatureAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BLSSignatureAggregator__factory extends ContractFactory {
  constructor(...args: BLSSignatureAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BLSSignatureAggregator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b9791500c16b639726521ab5391f2dd20a\\$__", "g"),
      linkLibraryAddresses["src/4337_wallet/bls/lib/BLSOpen.sol:BLSOpen"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BLSSignatureAggregator> {
    return super.deploy(overrides || {}) as Promise<BLSSignatureAggregator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BLSSignatureAggregator {
    return super.attach(address) as BLSSignatureAggregator;
  }
  connect(signer: Signer): BLSSignatureAggregator__factory {
    return super.connect(signer) as BLSSignatureAggregator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSSignatureAggregatorInterface {
    return new utils.Interface(_abi) as BLSSignatureAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BLSSignatureAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BLSSignatureAggregator;
  }
}

export interface BLSSignatureAggregatorLibraryAddresses {
  ["src/4337_wallet/bls/lib/BLSOpen.sol:BLSOpen"]: string;
}
