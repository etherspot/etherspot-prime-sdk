/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Whitelist,
  WhitelistInterface,
} from "../../../src/paymaster/Whitelist";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "AddedBatchToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "RemovedBatchFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "WhitelistInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "addBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "removeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114188061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101085780638da5cb5b14610112578063b092145e14610130578063b3154db014610160578063f2fde38b1461019057610093565b80630a3b0a4f1461009857806324efa264146100b457806329092d0e146100d05780636b845bfe146100ec575b600080fd5b6100b260048036038101906100ad9190610e3e565b6101ac565b005b6100ce60048036038101906100c99190610ed0565b6101f4565b005b6100ea60048036038101906100e59190610e3e565b6102c1565b005b61010660048036038101906101019190610ed0565b610309565b005b6101106103d6565b005b61011a6103ea565b6040516101279190610f2c565b60405180910390f35b61014a60048036038101906101459190610f47565b610413565b6040516101579190610fa2565b60405180910390f35b61017a60048036038101906101759190610f47565b610442565b6040516101879190610fa2565b60405180910390f35b6101aa60048036038101906101a59190610e3e565b610492565b005b6101c06768fbcdd46627a34e60c01b610515565b6101d467e950b8730cb1b58f60c01b610515565b6101e8676822b8740084191f60c01b610515565b6101f181610518565b50565b6102086707adef802e0a2e9860c01b610515565b61021c672181911124137b9960c01b610515565b610230678b8d0d91af2d06b460c01b610515565b61023a82826107b2565b61024e67ec3612479c894bff60c01b610515565b610262672a61664b3cb93b3760c01b610515565b818160405161027292919061107a565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f6eabb183ad4385932735ae89018089a008c58e814451b618bc0dd0e7922f6d1360405160405180910390a35050565b6102d567a0e9ed3ffb65e58a60c01b610515565b6102e96715dc3610bd6db11e60c01b610515565b6102fd676d6398be911915a360c01b610515565b6103068161086a565b50565b61031d67b68f3f647d0a7baa60c01b610515565b61033167387ee1435970e25960c01b610515565b61034567db6581ef0a29e8be60c01b610515565b61034f8282610b04565b61036367dbeae8b6c5a5c02a60c01b610515565b61037767f6f83aa73990787860c01b610515565b818160405161038792919061107a565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f75dcdde27b71b9c529ae8b02072e1eeda244662d2d9c2effea5a1afb8fc913f360405160405180910390a35050565b6103de610bbc565b6103e86000610c3a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006104586737270a3c93cb375f60c01b610515565b61046c67ba652b04f341019160c01b610515565b61048067a94b6553035184dc60c01b610515565b61048a8383610cfe565b905092915050565b61049a610bbc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090611116565b60405180910390fd5b61051281610c3a565b50565b50565b61052c67f6a2620fc42edd1760c01b610515565b61054067ca63df303fe2df8860c01b610515565b61055467352da4c31005e24560c01b610515565b610568673f86da22427dbe4060c01b610515565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90611182565b60405180910390fd5b6105eb6778e0839bb2cbb2be60c01b610515565b6105ff67e3ed4ba1d2acc9a660c01b610515565b6106136710a918d4825dcb3160c01b610515565b610627671611f3e3c7f468b260c01b610515565b6106313382610cfe565b15610671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066890611214565b60405180910390fd5b610685672cf2db8e498b9a4060c01b610515565b61069967e2beeed4b16b742360c01b610515565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506107416724fa5d1e03c3b43660c01b610515565b610755671fdbb6994253167760c01b610515565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0c4b48e75a1f7ab0a9a2f786b5d6c1f7789020403bff177fb54d46edb89ccc0060405160405180910390a350565b6107c6678376c0d944a0b59a60c01b610515565b6107da6788b76bc0b253991860c01b610515565b6107ee67b46c304ed5c3a77860c01b610515565b60005b8282905081101561086557610810679b7aa25078b5327660c01b610515565b61082467cddae10e49d1ed7960c01b610515565b61085483838381811061083a57610839611234565b5b905060200201602081019061084f9190610e3e565b610518565b8061085e9061129c565b90506107f1565b505050565b61087e6794c4d5b68d93d5dd60c01b610515565b61089267625d2f9b353ccbe160c01b610515565b6108a6675f283196510ff2eb60c01b610515565b6108ba670d578a868b76e17860c01b610515565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092090611182565b60405180910390fd5b61093d67600c63ec3774ea3060c01b610515565b610951677c4a0956700e03d660c01b610515565b61096567c755349d16f220ad60c01b610515565b6109796729a4d9e32ce2015e60c01b610515565b6109833382610cfe565b6109c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b990611356565b60405180910390fd5b6109d66753142b83d2ebe5af60c01b610515565b6109ea6775480db2b4564bbf60c01b610515565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610a93675a1f8dd94b9370bc60c01b610515565b610aa76735cba46e43b8488e60c01b610515565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd288ab5da2e1f37cf384a1565a3f905ad289b092fbdd31950dbbfef148c04f8860405160405180910390a350565b610b186719cc2cfe1cc5e5f160c01b610515565b610b2c67342f0338077b971c60c01b610515565b610b406741448bb72f9be57960c01b610515565b60005b82829050811015610bb757610b6267d6cc022c17f3262d60c01b610515565b610b76674199b6b9dd7e5c7b60c01b610515565b610ba6838383818110610b8c57610b8b611234565b5b9050602002016020810190610ba19190610e3e565b61086a565b80610bb09061129c565b9050610b43565b505050565b610bc4610dce565b73ffffffffffffffffffffffffffffffffffffffff16610be26103ea565b73ffffffffffffffffffffffffffffffffffffffff1614610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f906113c2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610d1467ff68de7f5bdc8c8d60c01b610515565b610d2867587050cc7807119260c01b610515565b610d3c67805332d6332991fc60c01b610515565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0b82610de0565b9050919050565b610e1b81610e00565b8114610e2657600080fd5b50565b600081359050610e3881610e12565b92915050565b600060208284031215610e5457610e53610dd6565b5b6000610e6284828501610e29565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e9057610e8f610e6b565b5b8235905067ffffffffffffffff811115610ead57610eac610e70565b5b602083019150836020820283011115610ec957610ec8610e75565b5b9250929050565b60008060208385031215610ee757610ee6610dd6565b5b600083013567ffffffffffffffff811115610f0557610f04610ddb565b5b610f1185828601610e7a565b92509250509250929050565b610f2681610e00565b82525050565b6000602082019050610f416000830184610f1d565b92915050565b60008060408385031215610f5e57610f5d610dd6565b5b6000610f6c85828601610e29565b9250506020610f7d85828601610e29565b9150509250929050565b60008115159050919050565b610f9c81610f87565b82525050565b6000602082019050610fb76000830184610f93565b92915050565b600081905092915050565b6000819050919050565b610fdb81610e00565b82525050565b6000610fed8383610fd2565b60208301905092915050565b60006110086020840184610e29565b905092915050565b6000602082019050919050565b60006110298385610fbd565b935061103482610fc8565b8060005b8581101561106d5761104a8284610ff9565b6110548882610fe1565b975061105f83611010565b925050600181019050611038565b5085925050509392505050565b600061108782848661101d565b91508190509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611100602683611093565b915061110b826110a4565b604082019050919050565b6000602082019050818103600083015261112f816110f3565b9050919050565b7f57686974656c6973743a3a205a65726f20616464726573730000000000000000600082015250565b600061116c601883611093565b915061117782611136565b602082019050919050565b6000602082019050818103600083015261119b8161115f565b9050919050565b7f57686974656c6973743a3a204163636f756e7420697320616c7265616479207760008201527f686974656c697374656400000000000000000000000000000000000000000000602082015250565b60006111fe602a83611093565b9150611209826111a2565b604082019050919050565b6000602082019050818103600083015261122d816111f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006112a782611292565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112d9576112d8611263565b5b600182019050919050565b7f57686974656c6973743a3a204163636f756e74206973206e6f7420776869746560008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000611340602683611093565b915061134b826112e4565b604082019050919050565b6000602082019050818103600083015261136f81611333565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113ac602083611093565b91506113b782611376565b602082019050919050565b600060208201905081810360008301526113db8161139f565b905091905056fea2646970667358221220f68753bc6819586c1627580897b2fb95acb641396b883ae06cb1e07a64d7b00564736f6c63430008110033";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Whitelist> {
    return super.deploy(overrides || {}) as Promise<Whitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Whitelist {
    return super.attach(address) as Whitelist;
  }
  override connect(signer: Signer): Whitelist__factory {
    return super.connect(signer) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist;
  }
}
