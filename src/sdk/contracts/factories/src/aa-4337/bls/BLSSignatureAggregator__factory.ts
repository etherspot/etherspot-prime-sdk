/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BLSSignatureAggregator,
  BLSSignatureAggregatorInterface,
} from "../../../../src/aa-4337/bls/BLSSignatureAggregator";

const _abi = [
  {
    inputs: [],
    name: "BLS_DOMAIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
    ],
    name: "aggregateSignatures",
    outputs: [
      {
        internalType: "bytes",
        name: "aggregatedSignature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTrailingPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "userOpToMessage",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "validateUserOpSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "sigForUserOp",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506139d3806100206000396000f3fe6080604052600436106100905760003560e01c806364c530cd1161005957806364c530cd14610193578063a6193531146101d0578063b7620eb41461020d578063c9e525df1461024a578063e3563a4f1461027557610090565b80629d925014610095578063275e2d79146100c057806340864431146100fd578063451711591461013a57806357f09b7214610156575b600080fd5b3480156100a157600080fd5b506100aa61029e565b6040516100b7919061231d565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e291906123b1565b6102c2565b6040516100f4919061248e565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f91906127fa565b61050f565b60405161013191906128ee565b60405180910390f35b610154600480360381019061014f9190612983565b6105a2565b005b34801561016257600080fd5b5061017d600480360381019061017891906127fa565b61064e565b60405161018a9190612a47565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190612a87565b6107c7565b6040516101c7919061248e565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f291906127fa565b6109f9565b604051610204919061231d565b60405180910390f35b34801561021957600080fd5b50610234600480360381019061022f9190612ad0565b610a86565b6040516102419190612a47565b60405180910390f35b34801561025657600080fd5b5061025f610ba6565b60405161026c9190612b28565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190612b99565b610bca565b005b7fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b81565b60606102d8672d0b81dd8a2f892960c01b61102e565b6102ec67ba37aa0e4106ddb860c01b61102e565b6103006757b172c354cfc2f160c01b61102e565b60008383905067ffffffffffffffff81111561031f5761031e6124b5565b5b60405190808252806020026020018201604052801561035857816020015b6103456122a6565b81526020019060019003908161033d5790505b50905061036f67046e6c6b0211014f60c01b61102e565b61038367388828db7f62175e60c01b61102e565b60005b815181101561045c576103a3674fbbffecf999aca160c01b61102e565b6103b767b599e5f8e71d353560c01b61102e565b6000808686848181106103cd576103cc612c1a565b5b90506020028101906103df9190612c58565b8061014001906103ef9190612c81565b8101906103fc9190612ce4565b9150915061041467520ac9399946c4ad60c01b61102e565b60405180604001604052808381526020018281525084848151811061043c5761043b612c1a565b5b60200260200101819052505050808061045490612d53565b915050610386565b5061047167ec632268a0e1a80360c01b61102e565b61048567194caf73b459d37d60c01b61102e565b60006104b1827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611031565b90506104c7678c84da6e32e73d7860c01b61102e565b6104db67b4fa8f609e0f884960c01b61102e565b806000015181602001516040516020016104f6929190612d9b565b6040516020818303038152906040529250505092915050565b6105176122c0565b61052b676e84851bbd6e500860c01b61102e565b61053f67e517a1d8d843c78560c01b61102e565b61055367304e7858cc00a0ad60c01b61102e565b60006105666105618461064e565b611238565b905061057c673b0af52fcf23e3ed60c01b61102e565b61059067e7dd64849407d96e60c01b61102e565b61059a83826112a4565b915050919050565b6105b667bf1c7b82d86ce1c160c01b61102e565b6105ca67ab0d85b416180bff60c01b61102e565b6105de67b81f94a52bbc145f60c01b61102e565b8173ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016106189190612dd3565b6000604051808303818588803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b50505050505050565b6106566122e2565b61066a671f27efe2091ac5f260c01b61102e565b61067e67f6f56906dda70d2260c01b61102e565b61069267c986d0ecdb5a842e60c01b61102e565b6000826040015190506106af6763abeaf5f5e90e8860c01b61102e565b6106c367e0aee3ec2dce736d60c01b61102e565b600081511115610705576106e16701ed8e36fee8515f60c01b61102e565b6106f567e8a7845a73f62df360c01b61102e565b6106fe81610a86565b91506107c0565b61071967dd67def0743ebddc60c01b61102e565b61072d67c804926443c5a33560c01b61102e565b61074167ca91d97b55c3e7af60c01b61102e565b826000015173ffffffffffffffffffffffffffffffffffffffff1663e02afbae61c3506040518263ffffffff1660e01b81526004016080604051808303818786fa158015610793573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107b89190612eb4565b9150506107c2565b505b919050565b60606107dd676643876ad39f3a0360c01b61102e565b6107f167c49ef87a9a9f1df760c01b61102e565b610805670bf9013d2f1f3c9860c01b61102e565b6000828061014001906108189190612c81565b8101906108259190612f92565b905061083b67cd5cf70e108e531860c01b61102e565b61084f67bafdc82ac572bca160c01b61102e565b60006108638461085e90612fbf565b61064e565b905061087967ccf1222e83760a9860c01b61102e565b61088d67fe641d29fecb828d60c01b61102e565b60006108aa8561089c90612fbf565b6108a584611238565b6112a4565b90506108c06757898c38c41fdc3860c01b61102e565b6108d4676f7da73bf3dbe2a160c01b61102e565b6108e867bd7232853af1d2af60c01b61102e565b73__$b78e61b50eae8ff14018a753b33166207a$__63ebbdac918484846040518463ffffffff1660e01b8152600401610923939291906130bd565b602060405180830381865af4158015610940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610964919061312d565b6109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a906131b7565b60405180910390fd5b6109b76725458066e357671160c01b61102e565b6109cb6739360f4005b2e16f60c01b61102e565b6109df6778e0b19ffa897bd760c01b61102e565b604051806020016040528060008152509350505050919050565b6000610a0f67df74552a87a693fc60c01b61102e565b610a2367ff531c2c73f6e2f560c01b61102e565b610a3767f38d16bb6bddb5ae60c01b61102e565b6000610a4a610a458461064e565b611238565b9050610a6067662b0135a11145dd60c01b61102e565b610a7467c377772c1316844c60c01b61102e565b610a7e83826113df565b915050919050565b610a8e6122e2565b610aa26716adf62c8852059360c01b61102e565b610ab667022127005ea6fa0d60c01b61102e565b610aca67de1e14cc94caf25260c01b61102e565b600082519050610ae4674cf07536bb1607e060c01b61102e565b610af867be8a4959b6f32feb60c01b61102e565b610b0c67153f370e8872932660c01b61102e565b60808111610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4690613223565b60405180910390fd5b610b6367a9b99e911da9126e60c01b61102e565b610b77672e2980e086d2027260c01b61102e565b606081840103805183526020810151602084015260408101516040840152606081015160608401525050919050565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781565b610bde67970d4eee97a7580b60c01b61102e565b610bf2676833eed6d40f20bd60c01b61102e565b610c066793192e858586ddad60c01b61102e565b610c1a670ac32f08e63f93a560c01b61102e565b60408282905014610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c579061328f565b60405180910390fd5b610c7467b5c6272f096aa43c60c01b61102e565b610c8867a4d61d3f2ab4519a60c01b61102e565b610c9c672a564e753c76f88f60c01b61102e565b60008282810190610cad9190612f92565b9050610cc2663fa3be7da06ce760c01b61102e565b610cd667ee47f5eecbe0f8a160c01b61102e565b6000858590509050610cf267f512a5c4a1ae152660c01b61102e565b610d0667d27a15d6a21e88f860c01b61102e565b60008167ffffffffffffffff811115610d2257610d216124b5565b5b604051908082528060200260200182016040528015610d5b57816020015b610d486122e2565b815260200190600190039081610d405790505b509050610d7267affa7139546d884960c01b61102e565b610d866799e9bf8e10b6ec5360c01b61102e565b60008267ffffffffffffffff811115610da257610da16124b5565b5b604051908082528060200260200182016040528015610ddb57816020015b610dc86122c0565b815260200190600190039081610dc05790505b509050610df26764b30b25d711410560c01b61102e565b610e06678010ee1d8ec7b25160c01b61102e565b60005b83811015610f1857610e2567c7a6ccffdd8d34a260c01b61102e565b610e3967f3b15e93d613bbb460c01b61102e565b6000898983818110610e4e57610e4d612c1a565b5b9050602002810190610e609190612c58565b610e6990612fbf565b9050610e7f678ec1e3b1bb8b785960c01b61102e565b610e888161064e565b848381518110610e9b57610e9a612c1a565b5b6020026020010181905250610eba67c5364224f4a2ef7760c01b61102e565b610ee681610ee1868581518110610ed457610ed3612c1a565b5b6020026020010151611238565b6112a4565b838381518110610ef957610ef8612c1a565b5b6020026020010181905250508080610f1090612d53565b915050610e09565b50610f2d67a575cf8708275b0760c01b61102e565b610f41672379a1ef07a81a8b60c01b61102e565b610f5567ba6c4abe6ac7951960c01b61102e565b73__$b78e61b50eae8ff14018a753b33166207a$__63914137638584846040518463ffffffff1660e01b8152600401610f90939291906134d1565b602060405180830381865af4158015610fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd1919061312d565b611010576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100790613562565b60405180910390fd5b611024676c5d02c438e237e260c01b61102e565b5050505050505050565b50565b6110396122a6565b61104d67bac7aefb2cdc58d160c01b61145a565b61106167bf7b90b57551ba6d60c01b61145a565b61107567d657c2b9819e42af60c01b61145a565b60008360008151811061108b5761108a612c1a565b5b60200260200101516000015190506110ad67ef98579942a1581360c01b61145a565b6110c1676f5148e87e4d2cb660c01b61145a565b6000846000815181106110d7576110d6612c1a565b5b60200260200101516020015190506110f96764536b9c3cc88a1e60c01b61145a565b61110d67051084d37f63a34f60c01b61145a565b60006001905061112767eca070057dd9fec360c01b61145a565b61113b672b4e9dc087ddb0bf60c01b61145a565b6000600190505b86518110156111ca5761115f6729e66f05b1cb6ad460c01b61145a565b6111ab8484848a858151811061117857611177612c1a565b5b6020026020010151600001518b868151811061119757611196612c1a565b5b60200260200101516020015160018c61145d565b80945081955082965050505080806111c290612d53565b915050611142565b506111df6736cd004b227a1c3260c01b61145a565b6111eb83838388611e0d565b809350819450505061120767d8fd332adb821d7960c01b61145a565b8284600001818152505061122567d4941698606fcfc960c01b61145a565b8184602001818152505050505092915050565b600061124e6729c525b406f3549160c01b61102e565b61126267d2f8164acc408f7760c01b61102e565b61127667390558382d812f9360c01b61102e565b816040516020016112879190612a47565b604051602081830303815290604052805190602001209050919050565b6112ac6122c0565b6112c067056df3dde3a9dcca60c01b61102e565b6112d467146e7f0bb9e3686360c01b61102e565b6112e867abb8f9f20cc5bb2160c01b61102e565b60006112f484846113df565b905061130a672714cd29604110c360c01b61102e565b61131e6782e1177556e9eb5b60c01b61102e565b73__$b78e61b50eae8ff14018a753b33166207a$__63a850a9097fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b8360405160200161136a91906135a3565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401611396929190613617565b6040805180830381865af41580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d691906136d2565b91505092915050565b60006113f5672aeafe928910bff260c01b61102e565b61140967fc867821d022e53660c01b61102e565b61141d67bbc75be5d0d0751060c01b61102e565b61142683611f60565b82304660405160200161143c949392919061370e565b60405160208183030381529060405280519060200120905092915050565b50565b6000806000611476679a27a40af94e045260c01b61145a565b61148a67aa7c8da870ffcf1060c01b61145a565b61149e67f461a75daddcbcb760c01b61145a565b60008a1480156114ae5750600089145b156114e9576114c767beb516ae475f9a1d60c01b61145a565b6114db679860f6a6df7bfb1060c01b61145a565b868686925092509250611e00565b6114fd673a15274d39a347d860c01b61145a565b61151167c7f5dcfae91d30ea60c01b61145a565b611525677defc86480cf272b60c01b61145a565b6000871480156115355750600086145b156115705761154e672df08358ea1862b660c01b61145a565b61156267619e727e2769ee3160c01b61145a565b898989925092509250611e00565b61158467d72ddf846423372a60c01b61145a565b611598673adcf0cef6408e9b60c01b61145a565b6115ac676aa65cbc500b4c7760c01b61145a565b6115b46122e2565b6115c86720f57a3e1944fb8860c01b61145a565b84806115d7576115d6613753565b5b898a09816000600481106115ee576115ed612c1a565b5b60200201818152505061160b6775eb83505ce6345860c01b61145a565b848061161a57611619613753565b5b8160006004811061162e5761162d612c1a565b5b60200201518a098160016004811061164957611648612c1a565b5b602002018181525050611666670c3de006625138e360c01b61145a565b848061167557611674613753565b5b8687098160026004811061168c5761168b612c1a565b5b6020020181815250506116a96722859985dccfda2d60c01b61145a565b84806116b8576116b7613753565b5b816002600481106116cc576116cb612c1a565b5b60200201518709816003600481106116e7576116e6612c1a565b5b6020020181815250506117046720189291bf0487a460c01b61145a565b6040518060800160405280868061171e5761171d613753565b5b8360026004811061173257611731612c1a565b5b60200201518e098152602001868061174d5761174c613753565b5b8360036004811061176157611760612c1a565b5b60200201518d098152602001868061177c5761177b613753565b5b836000600481106117905761178f612c1a565b5b60200201518b09815260200186806117ab576117aa613753565b5b836001600481106117bf576117be612c1a565b5b60200201518a0981525090506117df670cad95991ed41a3060c01b61145a565b6117f367ab01c39f7b652f2260c01b61145a565b61180767d0d8e8b23d73775660c01b61145a565b8060026004811061181b5761181a612c1a565b5b60200201518160006004811061183457611833612c1a565b5b602002015114158015611857575061185667b97e4799fddd49e660c01b61201d565b5b806118ae57508060036004811061187157611870612c1a565b5b60200201518160016004811061188a57611889612c1a565b5b6020020151141580156118ad57506118ac6761abfbf0cefe697c60c01b61201d565b5b5b6118ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e4906137ce565b60405180910390fd5b61190167834ec6e505c97d5360c01b61145a565b611915672e072af96b04c65760c01b61145a565b6119296793f15b39bd9bbdef60c01b61145a565b6119316122e2565b61194567309fe16b369f603660c01b61145a565b858061195457611953613753565b5b8260006004811061196857611967612c1a565b5b60200201518761197891906137ee565b8360026004811061198c5761198b612c1a565b5b602002015108816000600481106119a6576119a5612c1a565b5b6020020181815250506119c3679b7aeaf5289dec9660c01b61145a565b85806119d2576119d1613753565b5b826001600481106119e6576119e5612c1a565b5b6020020151876119f691906137ee565b83600360048110611a0a57611a09612c1a565b5b60200201510881600160048110611a2457611a23612c1a565b5b602002018181525050611a4167574a980ed84757ed60c01b61145a565b8580611a5057611a4f613753565b5b81600060048110611a6457611a63612c1a565b5b602002015182600060048110611a7d57611a7c612c1a565b5b60200201510981600260048110611a9757611a96612c1a565b5b602002018181525050611ab46783b2fdb85879030460c01b61145a565b8580611ac357611ac2613753565b5b81600060048110611ad757611ad6612c1a565b5b602002015182600260048110611af057611aef612c1a565b5b60200201510981600360048110611b0a57611b09612c1a565b5b602002018181525050611b2767ac86b7c206f0d98d60c01b61145a565b611b3b67a03209877a68e28460c01b61145a565b60008680611b4c57611b4b613753565b5b82600360048110611b6057611b5f612c1a565b5b602002015188611b7091906137ee565b8880611b7f57611b7e613753565b5b84600160048110611b9357611b92612c1a565b5b602002015185600160048110611bac57611bab612c1a565b5b602002015109089050611bc967539c8ce58307c5ba60c01b61145a565b8680611bd857611bd7613753565b5b8780611be757611be6613753565b5b8880611bf657611bf5613753565b5b84600260048110611c0a57611c09612c1a565b5b602002015186600060048110611c2357611c22612c1a565b5b60200201510960020988611c3791906137ee565b82089050611c4f6735b4c673b5b377c460c01b61145a565b611c63671782567ee36034e260c01b61145a565b60008780611c7457611c73613753565b5b8880611c8357611c82613753565b5b838a611c8f91906137ee565b8a80611c9e57611c9d613753565b5b86600260048110611cb257611cb1612c1a565b5b602002015188600060048110611ccb57611cca612c1a565b5b6020020151090884600160048110611ce657611ce5612c1a565b5b6020020151099050611d02671e5050fde573506f60c01b61145a565b8780611d1157611d10613753565b5b8880611d2057611d1f613753565b5b84600360048110611d3457611d33612c1a565b5b602002015186600160048110611d4d57611d4c612c1a565b5b60200201510989611d5e91906137ee565b82089050611d76677f2772cfe3830ced60c01b61145a565b611d8a67bebb6fd9d574a37560c01b61145a565b60008880611d9b57611d9a613753565b5b8980611daa57611da9613753565b5b8b8f0985600060048110611dc157611dc0612c1a565b5b6020020151099050611ddd6776c44c395bc8517d60c01b61145a565b611df167a8b781e23d88f5b060c01b61145a565b82828297509750975050505050505b9750975097945050505050565b600080611e2467804ab996c53b718260c01b61145a565b611e38671002e9121430c08660c01b61145a565b611e4c6704f62169fa2635bb60c01b61145a565b6000611e588585612028565b9050611e6e676b289e19f36e6df060c01b61145a565b611e826786ccceb7ee22875160c01b61145a565b60008480611e9357611e92613753565b5b8283099050611eac67e42ac8eba0fac65060c01b61145a565b611ec0678cb7be2d4d4b596e60c01b61145a565b60008580611ed157611ed0613753565b5b828a099050611eea6706348f877bc37d0760c01b61145a565b611efe673da8e856b5f9c49a60c01b61145a565b60008680611f0f57611f0e613753565b5b8780611f1e57611f1d613753565b5b8486098a099050611f39671bbcb73ca041a28e60c01b61145a565b611f4d67775eae708f68d39d60c01b61145a565b8181955095505050505094509492505050565b6000611f7667eee777d2085b6adf60c01b61102e565b611f8a671eaf7dcc85555ab260c01b61102e565b611f9e678b3220503af7e2c460c01b61102e565b8160000151826020015183604001518051906020012084606001518051906020012085608001518660a001518760c001518860e001518961010001518a6101200151805190602001206040516020016120009a99989796959493929190613822565b604051602081830303815290604052805190602001209050919050565b600060019050919050565b600061203e678fe06fba91bceb8f60c01b61145a565b6120526711a925edb7892ed360c01b61145a565b61206667c01575aa641dfb5f60c01b61145a565b61207a67a8ea7b1c5af75c1360c01b61145a565b6000831415801561208b5750818314155b8015612098575060008214155b6120d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ce9061390a565b60405180910390fd5b6120eb674c50d41cb23f117160c01b61145a565b6120ff67562f67e3bcbdd66760c01b61145a565b61211367c7f54801d590403f60c01b61145a565b6000612129672f64517e73fe941060c01b61145a565b61213d67bd841857cd07687b60c01b61145a565b6000600190506121576754b304c9a6f15fab60c01b61145a565b61216b67d26721bd186df9bb60c01b61145a565b600084905061218467d05918f748bc4ce960c01b61145a565b61219867d8fc1d6ed31b4cfc60c01b61145a565b60006121ae67a56ff3a1d863690860c01b61145a565b6121c2671772bd35812a30f660c01b61145a565b5b60008714612271576121df6705fb7ca6e038f6e060c01b61145a565b86826121eb919061392a565b9050612201675d8902f6e02d72d560c01b61145a565b82868061221157612210613753565b5b87806122205761221f613753565b5b8584098861222e91906137ee565b8608809450819550505061224c670700f75912b1f41560c01b61145a565b868782612259919061395b565b8361226491906137ee565b80985081935050506121c3565b61228567556266df3e93c49d60c01b61145a565b61229967d75335e3957624f460c01b61145a565b8394505050505092915050565b604051806040016040528060008152602001600081525090565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b6000819050919050565b61231781612304565b82525050565b6000602082019050612332600083018461230e565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126123715761237061234c565b5b8235905067ffffffffffffffff81111561238e5761238d612351565b5b6020830191508360208202830111156123aa576123a9612356565b5b9250929050565b600080602083850312156123c8576123c7612342565b5b600083013567ffffffffffffffff8111156123e6576123e5612347565b5b6123f28582860161235b565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561243857808201518184015260208101905061241d565b60008484015250505050565b6000601f19601f8301169050919050565b6000612460826123fe565b61246a8185612409565b935061247a81856020860161241a565b61248381612444565b840191505092915050565b600060208201905081810360008301526124a88184612455565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6124ed82612444565b810181811067ffffffffffffffff8211171561250c5761250b6124b5565b5b80604052505050565b600061251f612338565b905061252b82826124e4565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061256082612535565b9050919050565b61257081612555565b811461257b57600080fd5b50565b60008135905061258d81612567565b92915050565b6000819050919050565b6125a681612593565b81146125b157600080fd5b50565b6000813590506125c38161259d565b92915050565b600080fd5b600067ffffffffffffffff8211156125e9576125e86124b5565b5b6125f282612444565b9050602081019050919050565b82818337600083830152505050565b600061262161261c846125ce565b612515565b90508281526020810184848401111561263d5761263c6125c9565b5b6126488482856125ff565b509392505050565b600082601f8301126126655761266461234c565b5b813561267584826020860161260e565b91505092915050565b60006101608284031215612695576126946124b0565b5b6126a0610160612515565b905060006126b08482850161257e565b60008301525060206126c4848285016125b4565b602083015250604082013567ffffffffffffffff8111156126e8576126e7612530565b5b6126f484828501612650565b604083015250606082013567ffffffffffffffff81111561271857612717612530565b5b61272484828501612650565b6060830152506080612738848285016125b4565b60808301525060a061274c848285016125b4565b60a08301525060c0612760848285016125b4565b60c08301525060e0612774848285016125b4565b60e083015250610100612789848285016125b4565b6101008301525061012082013567ffffffffffffffff8111156127af576127ae612530565b5b6127bb84828501612650565b6101208301525061014082013567ffffffffffffffff8111156127e1576127e0612530565b5b6127ed84828501612650565b6101408301525092915050565b6000602082840312156128105761280f612342565b5b600082013567ffffffffffffffff81111561282e5761282d612347565b5b61283a8482850161267e565b91505092915050565b600060029050919050565b600081905092915050565b6000819050919050565b61286c81612593565b82525050565b600061287e8383612863565b60208301905092915050565b6000602082019050919050565b6128a081612843565b6128aa818461284e565b92506128b582612859565b8060005b838110156128e65781516128cd8782612872565b96506128d88361288a565b9250506001810190506128b9565b505050505050565b60006040820190506129036000830184612897565b92915050565b600061291482612555565b9050919050565b61292481612909565b811461292f57600080fd5b50565b6000813590506129418161291b565b92915050565b600063ffffffff82169050919050565b61296081612947565b811461296b57600080fd5b50565b60008135905061297d81612957565b92915050565b6000806040838503121561299a57612999612342565b5b60006129a885828601612932565b92505060206129b98582860161296e565b9150509250929050565b600060049050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6129f9816129c3565b612a0381846129ce565b9250612a0e826129d9565b8060005b83811015612a3f578151612a268782612872565b9650612a31836129e3565b925050600181019050612a12565b505050505050565b6000608082019050612a5c60008301846129f0565b92915050565b600080fd5b60006101608284031215612a7e57612a7d612a62565b5b81905092915050565b600060208284031215612a9d57612a9c612342565b5b600082013567ffffffffffffffff811115612abb57612aba612347565b5b612ac784828501612a67565b91505092915050565b600060208284031215612ae657612ae5612342565b5b600082013567ffffffffffffffff811115612b0457612b03612347565b5b612b1084828501612650565b91505092915050565b612b2281612593565b82525050565b6000602082019050612b3d6000830184612b19565b92915050565b60008083601f840112612b5957612b5861234c565b5b8235905067ffffffffffffffff811115612b7657612b75612351565b5b602083019150836001820283011115612b9257612b91612356565b5b9250929050565b60008060008060408587031215612bb357612bb2612342565b5b600085013567ffffffffffffffff811115612bd157612bd0612347565b5b612bdd8782880161235b565b9450945050602085013567ffffffffffffffff811115612c0057612bff612347565b5b612c0c87828801612b43565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600161016003833603038112612c7557612c74612c49565b5b80830191505092915050565b60008083356001602003843603038112612c9e57612c9d612c49565b5b80840192508235915067ffffffffffffffff821115612cc057612cbf612c4e565b5b602083019250600182023603831315612cdc57612cdb612c53565b5b509250929050565b60008060408385031215612cfb57612cfa612342565b5b6000612d09858286016125b4565b9250506020612d1a858286016125b4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d5e82612593565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d9057612d8f612d24565b5b600182019050919050565b6000604082019050612db06000830185612b19565b612dbd6020830184612b19565b9392505050565b612dcd81612947565b82525050565b6000602082019050612de86000830184612dc4565b92915050565b600067ffffffffffffffff821115612e0957612e086124b5565b5b602082029050919050565b600081519050612e238161259d565b92915050565b6000612e3c612e3784612dee565b612515565b90508060208402830185811115612e5657612e55612356565b5b835b81811015612e7f5780612e6b8882612e14565b845260208401935050602081019050612e58565b5050509392505050565b600082601f830112612e9e57612e9d61234c565b5b6004612eab848285612e29565b91505092915050565b600060808284031215612eca57612ec9612342565b5b6000612ed884828501612e89565b91505092915050565b600067ffffffffffffffff821115612efc57612efb6124b5565b5b602082029050919050565b6000612f1a612f1584612ee1565b612515565b90508060208402830185811115612f3457612f33612356565b5b835b81811015612f5d5780612f4988826125b4565b845260208401935050602081019050612f36565b5050509392505050565b600082601f830112612f7c57612f7b61234c565b5b6002612f89848285612f07565b91505092915050565b600060408284031215612fa857612fa7612342565b5b6000612fb684828501612f67565b91505092915050565b6000612fcb368361267e565b9050919050565b600081905092915050565b612fe681612593565b82525050565b6000612ff88383612fdd565b60208301905092915050565b61300d81612843565b6130178184612fd2565b925061302282612859565b8060005b8381101561305357815161303a8782612fec565b96506130458361288a565b925050600181019050613026565b505050505050565b600081905092915050565b61306f816129c3565b613079818461305b565b9250613084826129d9565b8060005b838110156130b557815161309c8782612fec565b96506130a7836129e3565b925050600181019050613088565b505050505050565b6000610100820190506130d36000830186613004565b6130e06040830185613066565b6130ed60c0830184613004565b949350505050565b60008115159050919050565b61310a816130f5565b811461311557600080fd5b50565b60008151905061312781613101565b92915050565b60006020828403121561314357613142612342565b5b600061315184828501613118565b91505092915050565b600082825260208201905092915050565b7f424c533a2077726f6e6720736967000000000000000000000000000000000000600082015250565b60006131a1600e8361315a565b91506131ac8261316b565b602082019050919050565b600060208201905081810360008301526131d081613194565b9050919050565b7f6461746120746f6f2073686f727420666f722073696700000000000000000000600082015250565b600061320d60168361315a565b9150613218826131d7565b602082019050919050565b6000602082019050818103600083015261323c81613200565b9050919050565b7f424c533a20696e76616c6964207369676e617475726500000000000000000000600082015250565b600061327960168361315a565b915061328482613243565b602082019050919050565b600060208201905081810360008301526132a88161326c565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081905092915050565b6132ef816129c3565b6132f981846132db565b9250613304826129d9565b8060005b8381101561333557815161331c8782612fec565b9650613327836129e3565b925050600181019050613308565b505050505050565b600061334983836132e6565b60808301905092915050565b6000602082019050919050565b600061336d826132af565b61337781856132ba565b9350613382836132cb565b8060005b838110156133b357815161339a888261333d565b97506133a583613355565b925050600181019050613386565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081905092915050565b61340081612843565b61340a81846133ec565b925061341582612859565b8060005b8381101561344657815161342d8782612fec565b96506134388361288a565b925050600181019050613419565b505050505050565b600061345a83836133f7565b60408301905092915050565b6000602082019050919050565b600061347e826133c0565b61348881856133cb565b9350613493836133dc565b8060005b838110156134c45781516134ab888261344e565b97506134b683613466565b925050600181019050613497565b5085935050505092915050565b60006080820190506134e66000830186613004565b81810360408301526134f88185613362565b9050818103606083015261350c8184613473565b9050949350505050565b7f424c533a2076616c69646174655369676e617475726573206661696c65640000600082015250565b600061354c601e8361315a565b915061355782613516565b602082019050919050565b6000602082019050818103600083015261357b8161353f565b9050919050565b6000819050919050565b61359d61359882612304565b613582565b82525050565b60006135af828461358c565b60208201915081905092915050565b6135c781612304565b82525050565b600082825260208201905092915050565b60006135e9826123fe565b6135f381856135cd565b935061360381856020860161241a565b61360c81612444565b840191505092915050565b600060408201905061362c60008301856135be565b818103602083015261363e81846135de565b90509392505050565b600061365a61365584612ee1565b612515565b9050806020840283018581111561367457613673612356565b5b835b8181101561369d57806136898882612e14565b845260208401935050602081019050613676565b5050509392505050565b600082601f8301126136bc576136bb61234c565b5b60026136c9848285613647565b91505092915050565b6000604082840312156136e8576136e7612342565b5b60006136f6848285016136a7565b91505092915050565b61370881612555565b82525050565b6000608082019050613723600083018761230e565b613730602083018661230e565b61373d60408301856136ff565b61374a6060830184612b19565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f557365206a6163446f75626c652066756e6374696f6e20696e73746561640000600082015250565b60006137b8601e8361315a565b91506137c382613782565b602082019050919050565b600060208201905081810360008301526137e7816137ab565b9050919050565b60006137f982612593565b915061380483612593565b925082820390508181111561381c5761381b612d24565b5b92915050565b600061014082019050613838600083018d6136ff565b613845602083018c612b19565b613852604083018b61230e565b61385f606083018a61230e565b61386c6080830189612b19565b61387960a0830188612b19565b61388660c0830187612b19565b61389360e0830186612b19565b6138a1610100830185612b19565b6138af61012083018461230e565b9b9a5050505050505050505050565b7f496e76616c6964206e756d626572000000000000000000000000000000000000600082015250565b60006138f4600e8361315a565b91506138ff826138be565b602082019050919050565b60006020820190508181036000830152613923816138e7565b9050919050565b600061393582612593565b915061394083612593565b9250826139505761394f613753565b5b828204905092915050565b600061396682612593565b915061397183612593565b925082820261397f81612593565b9150828204841483151761399657613995612d24565b5b509291505056fea264697066735822122075e6cac251cf596a1d44634ae2178bfcd731829f21ec04aeb684408ead82c18c64736f6c63430008110033";

type BLSSignatureAggregatorConstructorParams =
  | [
      linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSSignatureAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BLSSignatureAggregator__factory extends ContractFactory {
  constructor(...args: BLSSignatureAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BLSSignatureAggregator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b78e61b50eae8ff14018a753b33166207a\\$__", "g"),
      linkLibraryAddresses["src/aa-4337/bls/lib/BLSOpen.sol:BLSOpen"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BLSSignatureAggregator> {
    return super.deploy(overrides || {}) as Promise<BLSSignatureAggregator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BLSSignatureAggregator {
    return super.attach(address) as BLSSignatureAggregator;
  }
  override connect(signer: Signer): BLSSignatureAggregator__factory {
    return super.connect(signer) as BLSSignatureAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSSignatureAggregatorInterface {
    return new utils.Interface(_abi) as BLSSignatureAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BLSSignatureAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BLSSignatureAggregator;
  }
}

export interface BLSSignatureAggregatorLibraryAddresses {
  ["src/aa-4337/bls/lib/BLSOpen.sol:BLSOpen"]: string;
}
