/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SenderCreator,
  SenderCreatorInterface,
} from "../../../../src/aa-4337/core/SenderCreator";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "createSender",
    outputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061044f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004a60048036038101906100459190610288565b610060565b6040516100579190610316565b60405180910390f35b600061007667a77071926199a6bc60c01b610216565b61008a6705db437c17f4c53160c01b610216565b61009e67f7e34fe0ef67d65660c01b610216565b600083836000906014926100b49392919061033b565b906100bf91906103ba565b60601c90506100d8679eee7b10c69e371260c01b610216565b6100ec67e915e597d60e618060c01b610216565b6000848460149080926101019392919061033b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905061015a6759fca45833adea5d60c01b610216565b61016e67d2f649902cd0246260c01b610216565b600061018467957e43ea595585a160c01b610216565b602060008351602085016000875af1905060005193506101ae67a96890a92414c3b460c01b610216565b6101c267936c0d2a6e83afc460c01b610216565b806101f8576101db67cf211eb43cb304cc60c01b610216565b6101ef67f8af295b41c5669760c01b610216565b6000935061020d565b61020c67bedaa80464ace1ed60c01b610216565b5b50505092915050565b50565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261024857610247610223565b5b8235905067ffffffffffffffff81111561026557610264610228565b5b6020830191508360018202830111156102815761028061022d565b5b9250929050565b6000806020838503121561029f5761029e610219565b5b600083013567ffffffffffffffff8111156102bd576102bc61021e565b5b6102c985828601610232565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610300826102d5565b9050919050565b610310816102f5565b82525050565b600060208201905061032b6000830184610307565b92915050565b600080fd5b600080fd5b6000808585111561034f5761034e610331565b5b838611156103605761035f610336565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b60006103c68383610376565b826103d18135610381565b925060148210156104115761040c7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000836014036008026103ad565b831692505b50509291505056fea2646970667358221220222219afa35e7a9ea15a12342931ab42e032fb2f8ffc39aeda6c656ef722d50964736f6c63430008110033";

type SenderCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SenderCreator__factory extends ContractFactory {
  constructor(...args: SenderCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SenderCreator> {
    return super.deploy(overrides || {}) as Promise<SenderCreator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SenderCreator {
    return super.attach(address) as SenderCreator;
  }
  override connect(signer: Signer): SenderCreator__factory {
    return super.connect(signer) as SenderCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderCreatorInterface {
    return new utils.Interface(_abi) as SenderCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SenderCreator {
    return new Contract(address, _abi, signerOrProvider) as SenderCreator;
  }
}
