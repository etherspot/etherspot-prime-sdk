/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestRevertAccount,
  TestRevertAccountInterface,
} from "../../../../src/aa-4337/test/TestRevertAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_ep",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "revertLong",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040516104fa3803806104fa83398181016040528101906100259190610117565b61003f675cec91549a6b597060c01b61009f60201b60201c565b61005967bae9d58e74dddcfe60c01b61009f60201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610144565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d2826100a7565b9050919050565b60006100e4826100c7565b9050919050565b6100f4816100d9565b81146100ff57600080fd5b50565b600081519050610111816100eb565b92915050565b60006020828403121561012d5761012c6100a2565b5b600061013b84828501610102565b91505092915050565b6103a7806101536000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633a871cdd1461003b578063be76c6ef1461006b575b600080fd5b6100556004803603810190610050919061024f565b610087565b60405161006291906102cd565b60405180910390f35b610085600480360381019061008091906102e8565b610184565b005b600061009d673851f64be78f9e2d60c01b6101b1565b6100b167f748b386d7a0187860c01b6101b1565b6100c567d3974bff61c4f11160c01b6101b1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf983306040518363ffffffff1660e01b815260040161011f9190610356565b6000604051808303818588803b15801561013857600080fd5b505af115801561014c573d6000803e3d6000fd5b5050505050610165671be7fc294f27f3fa60c01b6101b1565b61017967d870af7837647c7b60c01b6101b1565b600090509392505050565b610198677692a2a53530b4af60c01b6101b1565b6101ac67c1d35d2ce47b200460c01b6101b1565b806000fd5b50565b600080fd5b600080fd5b600080fd5b600061016082840312156101da576101d96101be565b5b81905092915050565b6000819050919050565b6101f6816101e3565b811461020157600080fd5b50565b600081359050610213816101ed565b92915050565b6000819050919050565b61022c81610219565b811461023757600080fd5b50565b60008135905061024981610223565b92915050565b600080600060608486031215610268576102676101b4565b5b600084013567ffffffffffffffff811115610286576102856101b9565b5b610292868287016101c3565b93505060206102a386828701610204565b92505060406102b48682870161023a565b9150509250925092565b6102c781610219565b82525050565b60006020820190506102e260008301846102be565b92915050565b6000602082840312156102fe576102fd6101b4565b5b600061030c8482850161023a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061034082610315565b9050919050565b61035081610335565b82525050565b600060208201905061036b6000830184610347565b9291505056fea264697066735822122003ee97c26afc9e3e98db71598e46061eca1142f695e962568b746ce9a74f82a664736f6c63430008110033";

type TestRevertAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestRevertAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestRevertAccount__factory extends ContractFactory {
  constructor(...args: TestRevertAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ep: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TestRevertAccount> {
    return super.deploy(_ep, overrides || {}) as Promise<TestRevertAccount>;
  }
  override getDeployTransaction(
    _ep: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ep, overrides || {});
  }
  override attach(address: string): TestRevertAccount {
    return super.attach(address) as TestRevertAccount;
  }
  override connect(signer: Signer): TestRevertAccount__factory {
    return super.connect(signer) as TestRevertAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRevertAccountInterface {
    return new utils.Interface(_abi) as TestRevertAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRevertAccount {
    return new Contract(address, _abi, signerOrProvider) as TestRevertAccount;
  }
}
