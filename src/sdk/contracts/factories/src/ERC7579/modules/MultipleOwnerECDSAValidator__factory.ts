/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MultipleOwnerECDSAValidator,
  MultipleOwnerECDSAValidatorInterface,
} from "../../../../src/ERC7579/modules/MultipleOwnerECDSAValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "InvalidExecution",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "InvalidTargetAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTargetCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "typeID",
        type: "uint256",
      },
    ],
    name: "isModuleType",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "isValidSignatureWithSender",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IERC4337.UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610497806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636d61fe701461005c5780638a91b0e31461005c578063ecd0596114610070578063f551e2ee14610099578063fff35b72146100ca575b600080fd5b61006e61006a3660046102e3565b5050565b005b61008461007e366004610325565b60011490565b60405190151581526020015b60405180910390f35b6100b16100a736600461033e565b6000949350505050565b6040516001600160e01b03199091168152602001610090565b6100dd6100d83660046103a6565b6100eb565b604051908152602001610090565b60008061011d836020527b19457468657265756d205369676e6564204d6573736167653a0a3332600052603c60042090565b9050600061016f6101326101408701876103f1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506102099050565b90506001600160a01b03811615806101ec57506040516317aa5fb760e11b81526001600160a01b03821660048201523390632f54bf6e90602401602060405180830381865afa1580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea9190610438565b155b156101fc57600192505050610203565b6000925050505b92915050565b604051600190836000526020830151604052604083510361024557604083015160ff81901c601b016020526001600160ff1b031660605261026b565b604183510361026657606083015160001a602052604083015160605261026b565b600091505b6020600160806000855afa5191503d61028c57638baa579f6000526004601cfd5b600060605260405292915050565b60008083601f8401126102ac57600080fd5b50813567ffffffffffffffff8111156102c457600080fd5b6020830191508360208285010111156102dc57600080fd5b9250929050565b600080602083850312156102f657600080fd5b823567ffffffffffffffff81111561030d57600080fd5b6103198582860161029a565b90969095509350505050565b60006020828403121561033757600080fd5b5035919050565b6000806000806060858703121561035457600080fd5b84356001600160a01b038116811461036b57600080fd5b935060208501359250604085013567ffffffffffffffff81111561038e57600080fd5b61039a8782880161029a565b95989497509550505050565b600080604083850312156103b957600080fd5b823567ffffffffffffffff8111156103d057600080fd5b830161016081860312156103e357600080fd5b946020939093013593505050565b6000808335601e1984360301811261040857600080fd5b83018035915067ffffffffffffffff82111561042357600080fd5b6020019150368190038213156102dc57600080fd5b60006020828403121561044a57600080fd5b8151801515811461045a57600080fd5b939250505056fea264697066735822122036bd3e1fce05431ea8ff3ebb7b3cef0b85122211ada4d99f17200148e3e32eda64736f6c63430008170033";

type MultipleOwnerECDSAValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultipleOwnerECDSAValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultipleOwnerECDSAValidator__factory extends ContractFactory {
  constructor(...args: MultipleOwnerECDSAValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultipleOwnerECDSAValidator> {
    return super.deploy(
      overrides || {}
    ) as Promise<MultipleOwnerECDSAValidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultipleOwnerECDSAValidator {
    return super.attach(address) as MultipleOwnerECDSAValidator;
  }
  override connect(signer: Signer): MultipleOwnerECDSAValidator__factory {
    return super.connect(signer) as MultipleOwnerECDSAValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultipleOwnerECDSAValidatorInterface {
    return new utils.Interface(_abi) as MultipleOwnerECDSAValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultipleOwnerECDSAValidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultipleOwnerECDSAValidator;
  }
}
